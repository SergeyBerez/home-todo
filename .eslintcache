[{"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\index.js":"1","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\serviceWorker.js":"2","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\App.js":"3","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Firebase\\firebaseConfig.js":"4","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Context\\Context.js":"5","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\LinksDrowerHeader\\Drower.js":"6","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\About.js":"7","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\Users.js":"8","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Home.js":"9","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\UsersTask\\UserPersonalTasks.js":"10","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Auth\\Auth.js":"11","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\User.js":"12","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\UsersTask\\list.js":"13","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\components\\ModaForlEdit.js":"14"},{"size":584,"mtime":1611147873838,"results":"15","hashOfConfig":"16"},{"size":5227,"mtime":1610670766171,"results":"17","hashOfConfig":"16"},{"size":9984,"mtime":1612283409309,"results":"18","hashOfConfig":"16"},{"size":817,"mtime":1611689004754,"results":"19","hashOfConfig":"16"},{"size":481,"mtime":1612283564249,"results":"20","hashOfConfig":"16"},{"size":5549,"mtime":1612026220143,"results":"21","hashOfConfig":"16"},{"size":597,"mtime":1611508903026,"results":"22","hashOfConfig":"16"},{"size":3403,"mtime":1611512392805,"results":"23","hashOfConfig":"16"},{"size":2393,"mtime":1611352027677,"results":"24","hashOfConfig":"16"},{"size":4927,"mtime":1611502523081,"results":"25","hashOfConfig":"16"},{"size":11967,"mtime":1612282907761,"results":"26","hashOfConfig":"16"},{"size":3666,"mtime":1611349752659,"results":"27","hashOfConfig":"16"},{"size":3801,"mtime":1611502301346,"results":"28","hashOfConfig":"16"},{"size":2882,"mtime":1611327755346,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"52doba",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\index.js",[],["67","68"],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\serviceWorker.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\App.js",["69","70","71"],"import React, { useState, useEffect, useContext } from \"react\"\r\n// import firebase from \"./Firebase/firebaseConfig\"\r\nimport { ContextProvider, Context } from \"./Context/Context\"\r\nimport { Route, Switch, Redirect } from \"react-router-dom\"\r\nimport Container from \"@material-ui/core/Container\"\r\n\r\nimport \"./App.css\"\r\nimport MiniDrawer from \"./LinksDrowerHeader/Drower\"\r\n\r\nimport Home from \"./pages/Home\"\r\nimport Users from \"./pages/Users/Users\"\r\nimport UserPersonalTasks from \"./pages/UsersTask/UserPersonalTasks\"\r\nimport About from \"./pages/About\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { database } from \"./Firebase/firebaseConfig.js\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            maxWidth: \"400px\",\r\n            paddingLeft: \"0px\",\r\n            paddingRight: \"0px\",\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            maxWidth: \" 600px\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            maxWidth: \" 960px\",\r\n        },\r\n    },\r\n    h3: {\r\n        marginTop: 150,\r\n        marginLeft: 30,\r\n    },\r\n}))\r\n\r\nfunction App() {\r\n    const classes = useStyles()\r\n    // const { auth } = useContext(Context)\r\n    // console.log(auth)\r\n    const USERS_LOCAL_STORAGE = JSON.parse(localStorage.getItem(\"users\")) || []\r\n    const message = [\r\n        \"приложение для создания пользователей и записей заметок\",\r\n        \"At First You need to LOGIN or Register\",\r\n    ]\r\n    const [stateUsers, setUsers] = useState(USERS_LOCAL_STORAGE)\r\n    const [valueUser, setValueUser] = useState({ value: \"\" })\r\n    const [valueTodo, setValueTodor] = useState({ value: \"\" })\r\n\r\n    //===get user from firebase ======\r\n    useEffect(() => {\r\n        const getUsersFromFirebase = (params) => {\r\n            let users = [...stateUsers]\r\n            database.ref().on(\"value\", (snapshot) => {\r\n                console.log(snapshot.val())\r\n            })\r\n\r\n            database.ref().on(\"value\", (elem) => {\r\n                if (elem.val()) {\r\n                    let newArrUser = users.concat(Object.values(elem.val()))\r\n                    let uniqeArray = newArrUser.filter((item, index, self) => {\r\n                        return (\r\n                            index ===\r\n                            self.findIndex((obj) => {\r\n                                return item.id_user === obj.id_user\r\n                            })\r\n                        )\r\n                    })\r\n\r\n                    localStorage.setItem(\"users\", JSON.stringify(uniqeArray))\r\n                    setUsers(uniqeArray)\r\n                }\r\n            })\r\n\r\n            // call our function get user from firebase\r\n        }\r\n        getUsersFromFirebase()\r\n    }, [])\r\n\r\n    // ===post data to firebase===\r\n    const postUsertoFirebase = (user) => {\r\n        database\r\n            .ref(\"users/\" + user.id_user)\r\n            .set(user)\r\n            .then((user) => {})\r\n    }\r\n    // =========remove  data from firebase====\r\n    const removeUserFromFirebase = (userId) => {\r\n        const user = database.ref(\"users\").child(userId)\r\n        user.remove()\r\n    }\r\n    const addUser = () => {\r\n        let newUser = {\r\n            id_user: Date.now() + 1,\r\n            time: new Date().toString().split(\"G\")[0],\r\n            user_name: valueUser.value,\r\n            completed: false,\r\n            tasks: [],\r\n            countTask: 0,\r\n        }\r\n        if (valueUser.value.length > 2) {\r\n            let users = [...stateUsers]\r\n            users.push(newUser)\r\n            localStorage.setItem(\"users\", JSON.stringify(users))\r\n            setUsers(users)\r\n            setValueUser({ value: \"\" })\r\n            postUsertoFirebase(newUser)\r\n        } else {\r\n            console.log(\"change title\")\r\n        }\r\n    }\r\n\r\n    // === handle input when we clicked on button in field\r\n    const changeTitleUserTask = (value) => {\r\n        setValueUser({ value })\r\n    }\r\n\r\n    const changeTitlebyModal = (value) => {\r\n        setValueTodor({ value })\r\n    }\r\n\r\n    // ===handle input when we clicked on key enter ===\r\n    const keyHandle = (e) => {\r\n        if (e.keyCode === 13 && valueUser.value.length > 2) {\r\n            addUser()\r\n        }\r\n    }\r\n    const keyHandleInputTask = (e, id_user, count_task) => {\r\n        if (e.keyCode === 13 && valueUser.value.length > 2) {\r\n            addTodoTaskUser(id_user, count_task)\r\n        }\r\n    }\r\n\r\n    const addTodoTaskUser = (id_user, count_task) => {\r\n        console.log(\"ddTodoTaskUser\")\r\n        if (valueUser.value.length > 2) {\r\n            let users = [...stateUsers]\r\n            let updateUser = users.find((user, i) => {\r\n                return user.id_user === id_user\r\n            })\r\n\r\n            updateUser.countTask = count_task + 1\r\n            const userTasks = [...updateUser.tasks]\r\n            const date = new Date()\r\n            userTasks.push({\r\n                id_task: new Date().getTime() + 1,\r\n                title: valueUser.value,\r\n                time_task: `${new Date().toLocaleDateString()} :${date.getHours()}:${date.getMinutes()}`,\r\n            })\r\n            updateUser.tasks = userTasks\r\n            setUsers(users)\r\n            localStorage.setItem(\"users\", JSON.stringify(users))\r\n            setValueUser({ value: \"\" })\r\n            postUsertoFirebase(updateUser)\r\n        }\r\n    }\r\n    const editTask = (id_user, id_task) => {\r\n        let users = [...stateUsers]\r\n        let user = users.find((params) => {\r\n            return params.id_user === id_user\r\n        })\r\n        let userTasks = [...user.tasks]\r\n\r\n        userTasks.map((item) => {\r\n            if (item.id_task === id_task) {\r\n                item.title = valueTodo.value\r\n            }\r\n            return item\r\n        })\r\n        user.tasks = userTasks\r\n        users.map((params) => {\r\n            if (id_user === params.id_user) {\r\n                params = user\r\n            }\r\n            return params\r\n        })\r\n\r\n        setUsers(users)\r\n        localStorage.setItem(\"users\", JSON.stringify(users))\r\n        setValueTodor({ value: \"\" })\r\n        postUsertoFirebase(user)\r\n    }\r\n\r\n    const deleteUser = (i, idUser) => {\r\n        let users = [...stateUsers]\r\n        users.splice(i, 1)\r\n        setUsers(users)\r\n        removeUserFromFirebase(idUser)\r\n        localStorage.setItem(\"users\", JSON.stringify(users))\r\n    }\r\n    const deleteTask = (idUser, idTask, id) => {\r\n        console.log(id)\r\n        let users = [...stateUsers]\r\n        let user = users.find((user) => {\r\n            return user.id_user === idUser\r\n        })\r\n        user.tasks.splice(id, 1)\r\n\r\n        users.push(user)\r\n        console.log(users)\r\n        let uniqueUsers = users.filter((user, pos) => {\r\n            return users.indexOf(user) === pos\r\n        })\r\n        postUsertoFirebase(user)\r\n        setUsers(uniqueUsers)\r\n        localStorage.setItem(\"users\", JSON.stringify(uniqueUsers))\r\n    }\r\n\r\n    return (\r\n        <ContextProvider>\r\n            <Container className={classes.root}>\r\n                <MiniDrawer />\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/todo-material-firebase\"\r\n                        render={() => {\r\n                            return <Home users={stateUsers} />\r\n                        }}\r\n                    />\r\n                    {true ? (\r\n                        <Route\r\n                            exact\r\n                            path=\"/todo-material-firebase/users\"\r\n                            render={() => (\r\n                                <Users\r\n                                    addUser={addUser}\r\n                                    keyHandle={keyHandle}\r\n                                    changeTitle={changeTitleUserTask}\r\n                                    users={stateUsers}\r\n                                    value={valueUser.value}\r\n                                    deleteUser={deleteUser}\r\n                                />\r\n                            )}\r\n                        />\r\n                    ) : (\r\n                        <Route\r\n                            exact\r\n                            path=\"/todo-material-firebase/users\"\r\n                            render={() => {\r\n                                return <About message={message[1]}></About>\r\n                            }}\r\n                        />\r\n                    )}\r\n\r\n                    <Route\r\n                        path=\"/todo-material-firebase/users/:id\"\r\n                        render={(e) => (\r\n                            <UserPersonalTasks\r\n                                valueUser={valueUser.value}\r\n                                valueTodo={valueTodo.value}\r\n                                history={e}\r\n                                users={stateUsers}\r\n                                keyHandle={keyHandleInputTask}\r\n                                addTodoTaskUser={addTodoTaskUser}\r\n                                editTask={editTask}\r\n                                changeTitleUserTask={changeTitleUserTask}\r\n                                changeTitlebyModal={changeTitlebyModal}\r\n                                deleteTask={deleteTask}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <Route\r\n                        path=\"/about\"\r\n                        render={() => {\r\n                            return <About message={message[0]}></About>\r\n                        }}\r\n                    />\r\n                    <Redirect to=\"/todo-material-firebase\"></Redirect>\r\n                    {/* <Route\r\n                        render={() => {\r\n                            return <h1 style={{ color: \"red\" }}> 404 not found page...</h1>\r\n                        }}\r\n                    /> */}\r\n                </Switch>\r\n            </Container>\r\n        </ContextProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Firebase\\firebaseConfig.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Context\\Context.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\LinksDrowerHeader\\Drower.js",["72","73","74"],"import React from \"react\"\r\nimport { Route, Switch, NavLink, Redirect } from \"react-router-dom\"\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\r\nimport clsx from \"clsx\"\r\nimport Drawer from \"@material-ui/core/Drawer\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport List from \"@material-ui/core/List\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\"\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport LinkIcon from \"@material-ui/icons/Link\"\r\n\r\nimport AuthMyComponent from \"../Auth/Auth\"\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    flexGrow: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: \"flex-end\",\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}))\r\nconst links = [\r\n    {\r\n        title: \"home\",\r\n        link: \"/todo-material-firebase\",\r\n    },\r\n    {\r\n        title: \"users\",\r\n        link: \"/todo-material-firebase/users\",\r\n    },\r\n    {\r\n        title: \"about\",\r\n        link: \"/todo-material-firebase/about\",\r\n    },\r\n]\r\n\r\nconst MiniDrawer = ({ auth }) => {\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        // disabled='true'\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className={classes.flexGrow} variant=\"h6\" noWrap>\r\n                        Menu\r\n                    </Typography>\r\n                    <AuthMyComponent auth={auth}></AuthMyComponent>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === \"rtl\" ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n\r\n                <List>\r\n                    {links.map((text, index) => (\r\n                        <ListItem button key={index}>\r\n                            <ListItemIcon>\r\n                                <NavLink onClick={handleDrawerClose} exact to={text.link} className={classes.link}>\r\n                                    <LinkIcon />\r\n                                </NavLink>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text.title} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MiniDrawer\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\About.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\Users.js",["75","76"],"import React, { useState, useEffect } from \"react\"\r\n// import { NavLink } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport List from \"@material-ui/core/List\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport UserMyComponent from \"./User\"\r\n\r\nimport PeopleAltTwoToneIcon from \"@material-ui/icons/PeopleAltTwoTone\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    Alert: {\r\n        marginTop: 70,\r\n        \"& div\": {\r\n            display: \"flex\",\r\n\r\n            alignItems: \"center\",\r\n        },\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n\r\n    textField: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            width: \"100%\",\r\n            margin: 8,\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: \"80%\",\r\n            margin: 8,\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \"80%\",\r\n            margin: 8,\r\n        },\r\n    },\r\n    button: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            fontSize: \".7rem\",\r\n            margin: 4,\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            fontSize: \"0.7rem\",\r\n            margin: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            fontSize: \"1rem\",\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}))\r\n\r\nfunction Users(props) {\r\n   \r\n    const classes = useStyles()\r\n    // props.value.length > 2? <h3>\r\n\r\n    return (\r\n        <div className={classes.header}>\r\n            <Alert icon={false} severity=\"info\" className={classes.Alert}>\r\n                <span>{Object.keys(props.users).length}</span>&#8195;\r\n                <PeopleAltTwoToneIcon /> &#8195;\r\n                {Object.keys(props.users).length !== 0 ? (\r\n                    <p> &#8195;ALL USERS&#8195;</p>\r\n                ) : (\r\n                    <>\r\n                        &#8195;<span>NOT USER</span>&#8195;\r\n                    </>\r\n                )}\r\n                {props.value.length > 3 ? (\r\n                    <span>User name&#8195;{props.value}</span>\r\n                ) : (\r\n                    <span>Enter name more 3 letters</span>\r\n                )}\r\n            </Alert>\r\n\r\n            <div className={classes.root}>\r\n                <TextField\r\n                    value={props.value}\r\n                    onChange={(e) => {\r\n                        props.changeTitle(e.target.value)\r\n                    }}\r\n                    onKeyUp={props.keyHandle}\r\n                    id=\"standard-full-width\"\r\n                    label=\"Enter user\"\r\n                    className={classes.textField}\r\n                    placeholder=\"name user\"\r\n                    helperText=\"\"\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    type=\"text\"\r\n                />\r\n                <Button onClick={props.addUser} variant=\"contained\" className={classes.button}>\r\n                    ADD&nbsp;USER\r\n                </Button>\r\n            </div>\r\n            <List>\r\n                <UserMyComponent users={props.users} deleteUser={props.deleteUser}></UserMyComponent>\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\nexport default Users\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Home.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\UsersTask\\UserPersonalTasks.js",["77"],"import React from \"react\"\r\nimport ListUserTaskMycomponent from \"./list\"\r\nimport List from \"@material-ui/core/List\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navLink: {\r\n        // display: \"flex\",\r\n        // flexGrow: 1,\r\n        // justifyContent: \"space-between\",\r\n        // textAlign: \"center\",\r\n        // textDecoration: \" none\",\r\n    },\r\n    Alert: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: 70,\r\n        \"& div\": {\r\n            display: \"flex\",\r\n            width: \"50%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n\r\n    textField: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            width: \"100%\",\r\n            margin: 8,\r\n        },\r\n\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \"85%\",\r\n            margin: 8,\r\n        },\r\n    },\r\n    button: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            fontSize: \".7rem\",\r\n        },\r\n\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            fontSize: \"1rem\",\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}))\r\n\r\nconst UserPersonalTasks = (props) => {\r\n    \r\n    const tasks = []\r\n    const classes = useStyles()\r\n\r\n    console.log(\"==============UserPersonalTasks render user tasks\", props)\r\n    let RenderUserTask\r\n    let user\r\n    if (props.users.length) {\r\n        user = props.users.find((user) => {\r\n            return user.id_user === parseInt(props.history.match.params.id)\r\n        })\r\n\r\n        if (user.tasks === undefined) {\r\n            user.tasks = tasks\r\n        }\r\n\r\n        RenderUserTask = user.tasks.map((task, i) => {\r\n            return (\r\n                <ListUserTaskMycomponent\r\n                    key={i}\r\n                    id={i}\r\n                    id_user={parseInt(props.history.match.params.id)}\r\n                    id_task={task.id_task}\r\n                    value={props.valueTodo}\r\n                    title={task.title}\r\n                    time={task.time_task}\r\n                    editTask={props.editTask}\r\n                    changeTitlebyModal={props.changeTitlebyModal}\r\n                    deleteTask={props.deleteTask}\r\n\r\n                    // showModal={item.showModal}\r\n                />\r\n            )\r\n        })\r\n    }\r\n    // ==============UserPersonalTasks render user tasks\r\n    return (\r\n        <div className={classes.header}>\r\n            <Alert icon={false} severity=\"info\" className={classes.Alert}>\r\n                <NavLink className={classes.navLink} to={\"/users/\"}>\r\n                    <IconButton>\r\n                        <KeyboardBackspaceIcon></KeyboardBackspaceIcon>\r\n                    </IconButton>\r\n                </NavLink>\r\n                {RenderUserTask === undefined ? (\r\n                    <p1>at firs add user</p1>\r\n                ) : (\r\n                    <>\r\n                        <p>{user.user_name}</p>\r\n                        &nbsp;\r\n                        <p>tasks &nbsp;{user.tasks.length}</p>\r\n                    </>\r\n                )}\r\n            </Alert>\r\n            <div className={classes.root}>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Enter task\"\r\n                    className={classes.textField}\r\n                    placeholder=\"name task\"\r\n                    helperText=\"\"\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    type=\"text\"\r\n                    value={props.valueUser}\r\n                    onKeyUp={(e) => {\r\n                        props.keyHandle(e, parseInt(props.history.match.params.id), user.tasks.length)\r\n                    }}\r\n                    onChange={(e) => {\r\n                        props.changeTitleUserTask(e.target.value)\r\n                    }}\r\n                    type=\"text\"></TextField>\r\n                <Button\r\n                    onClick={() => {\r\n                        props.addTodoTaskUser(parseInt(props.history.match.params.id), user.tasks.length)\r\n                    }}\r\n                    disabled={props.users.length === 0}\r\n                    variant=\"contained\"\r\n                    className={classes.button}>\r\n                    ADD&nbsp;TASK\r\n                </Button>\r\n            </div>\r\n            <List>{RenderUserTask} </List>\r\n        </div>\r\n    )\r\n}\r\nexport default UserPersonalTasks\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Auth\\Auth.js",["78","79","80","81","82","83","84","85","86","87"],"import React, { useState, useEffect, useContext } from \"react\"\r\nimport firebase, { authFirebase } from \"../Firebase/firebaseConfig\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nimport { Context } from \"../Context/Context.js\"\r\nimport GoogleButton from \"react-google-button\"\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\nconst useStyles = makeStyles((theme) => ({\r\n    // [theme.breakpoints.up(\"xs\")]: {},\r\n    // [theme.breakpoints.up(\"sm\")]: {},\r\n    // [theme.breakpoints.up(\"md\")]: {},\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n        input: {\r\n            width: \"100%\",\r\n            \"& input\": {\r\n                padding: \"13px 10px\",\r\n            },\r\n        },\r\n\r\n        dialog: {\r\n            textAlign: \"center\",\r\n\r\n            \"& form\": {\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                textAlign: \"center\",\r\n            },\r\n        },\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n        input: {\r\n            width: \"100%\",\r\n            \"& input\": {\r\n                padding: \"13px 15px\",\r\n            },\r\n        },\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n        input: {\r\n            width: \"100%\",\r\n            \"& input\": {\r\n                padding: \"15px 15px\",\r\n            },\r\n        },\r\n    },\r\n    typography: {\r\n        marginBottom: 5,\r\n        fontSize: \"0.8rem\",\r\n        textOverflow: \"ellipsis\",\r\n    },\r\n    icon: {\r\n        marginLeft: \"auto\",\r\n    },\r\n\r\n    blockButton: {\r\n        textAlign: \"center\",\r\n        width: \"100%\",\r\n    },\r\n    button: {\r\n        margin: \"5px\",\r\n    },\r\n}))\r\n\r\nconst AuthUser = () => {\r\n    const classes = useStyles()\r\n    const { auth, authisLogged, authIsExit } = useContext(Context)\r\n    const [messageFirebase, SetmessageFirebase] = useState(\"\")\r\n    const [valueInputs, SetvalutInputs] = useState({ email: \"\", password: \"\" })\r\n    const onHandleInputs = (e) => {\r\n        SetvalutInputs({\r\n            ...valueInputs,\r\n            [e.target.type]: e.target.value,\r\n        })\r\n    }\r\n\r\n    const createUserInFirebase = (e) => {\r\n        e.preventDefault()\r\n        const { email, password } = valueInputs\r\n        console.log(valueInputs)\r\n        authFirebase\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then((data) => {\r\n                authisLogged(true)\r\n                console.log(\"login user\", data.user)\r\n                SetvalutInputs({\r\n                    email: \"\",\r\n                    password: \"\",\r\n                })\r\n                localStorage.setItem(\r\n                    \"LOGIN_USER\",\r\n                    JSON.stringify({\r\n                        id: data.user.uid,\r\n                        localId: data.user.l,\r\n                        email: data.user.email,\r\n                    })\r\n                )\r\n                SetmessageFirebase(data.user.email)\r\n            })\r\n            .catch((error) => {\r\n                var messageFirebase = error.message\r\n                console.log(messageFirebase)\r\n                SetmessageFirebase(messageFirebase)\r\n            })\r\n    }\r\n    const onLogInAuthHandle = (e) => {\r\n        e.preventDefault()\r\n        const { email, password } = valueInputs\r\n\r\n        authFirebase\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then((data) => {\r\n                authisLogged()\r\n                SetvalutInputs({\r\n                    email: \"\",\r\n                    password: \"\",\r\n                })\r\n\r\n                SetmessageFirebase(data.user.email)\r\n                localStorage.setItem(\r\n                    \"LOGIN_USER\",\r\n                    JSON.stringify({\r\n                        id: data.user.uid,\r\n                        localId: data.user.l,\r\n                        email: data.user.email,\r\n                    })\r\n                )\r\n            })\r\n            .catch((error) => {\r\n                var messageFirebase = error.message\r\n                SetmessageFirebase(messageFirebase)\r\n            })\r\n    }\r\n\r\n    const AuthWithGoogle = () => {\r\n        var provider = new firebase.auth.GoogleAuthProvider()\r\n        firebase\r\n            .auth()\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                /** @type {firebase.auth.OAuthCredential} */\r\n                var credential = result.credential\r\n\r\n                // This gives you a Google Access Token. You can use it to access the Google API.\r\n                var token = credential.accessToken\r\n                // The signed-in user info.\r\n                var user = result.user\r\n                console.log(user, token, credential)\r\n\r\n                authisLogged()\r\n                SetvalutInputs({\r\n                    email: \"\",\r\n                    password: \"\",\r\n                })\r\n\r\n                SetmessageFirebase(user.email, user.displayName)\r\n                localStorage.setItem(\r\n                    \"LOGIN_USER\",\r\n                    JSON.stringify({\r\n                        id: user.uid,\r\n                        localId: user.l,\r\n                        email: user.email,\r\n                        token,\r\n                    })\r\n                )\r\n                // ...\r\n            })\r\n            .catch((error) => {\r\n                // Handle Errors here.\r\n                var errorCode = error.code\r\n                var errorMessage = error.message\r\n                // The email of the user's account used.\r\n                var email = error.email\r\n                // The firebase.auth.AuthCredential type that was used.\r\n                var credential = error.credential\r\n                // ...\r\n            })\r\n\r\n        console.log(\"auth with gogle\")\r\n    }\r\n\r\n    const authWithFaceBook = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"auth with facebook\")\r\n        var provider = new firebase.auth.FacebookAuthProvider()\r\n        firebase\r\n            .auth()\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                /** @type {firebase.auth.OAuthCredential} */\r\n                var credential = result.credential\r\n\r\n                // The signed-in user info.\r\n                var user = result.user\r\n                console.log(user)\r\n                // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n                var accessToken = credential.accessToken\r\n\r\n                // ...\r\n            })\r\n            .catch((error) => {\r\n                // Handle Errors here.\r\n                var errorCode = error.code\r\n                var errorMessage = error.message\r\n                // The email of the user's account used.\r\n                var email = error.email\r\n                // The firebase.auth.AuthCredential type that was used.\r\n                var credential = error.credential\r\n\r\n                // ...\r\n            })\r\n      \r\n    }\r\n    const authExit = () => {\r\n        authIsExit()\r\n        SetmessageFirebase(\"\")\r\n    }\r\n    const [open, setOpen] = React.useState(false)\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {auth ? (\r\n                <div>\r\n                    <Typography className={classes.typography}>{messageFirebase}</Typography>\r\n\r\n                    <Button value=\"exit\" color=\"inherit\" onClick={authExit}>\r\n                        exit\r\n                    </Button>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    {\" \"}\r\n                    <div>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n                            Enter/Register\r\n                        </Button>\r\n                    </div>\r\n                    <Dialog\r\n                        className={classes.dialog}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"simple-dialog-title\"\r\n                        open={open}>\r\n                        {\" \"}\r\n                        <CloseIcon className={classes.icon} onClick={handleClose}></CloseIcon>\r\n                        <DialogTitle id=\"simple-dialog-title\"> Register</DialogTitle>\r\n                        <form className={classes.form}>\r\n                            <Typography className={classes.typography}>{messageFirebase}</Typography>\r\n                            <TextField\r\n                                className={classes.input}\r\n                                id=\"outlined-Email-input\"\r\n                                label=\"email\"\r\n                                value={valueInputs.email}\r\n                                type=\"Email\"\r\n                                autoComplete=\"current-password\"\r\n                                variant=\"outlined\"\r\n                                onChange={onHandleInputs}\r\n                                color=\"secondary\"\r\n                            />\r\n                            <TextField\r\n                                className={classes.input}\r\n                                id=\"outlined-password-input\"\r\n                                label=\"password\"\r\n                                value={valueInputs.password}\r\n                                type=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                variant=\"outlined\"\r\n                                onChange={onHandleInputs}\r\n                                color=\"secondary\"\r\n                            />\r\n                            <div className={classes.blockButton}>\r\n                                {\" \"}\r\n                                <Button\r\n                                    className={classes.button}\r\n                                    type=\"submit\"\r\n                                    value=\"login\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={onLogInAuthHandle}>\r\n                                    Login\r\n                                </Button>\r\n                                <Button\r\n                                    className={classes.button}\r\n                                    type=\"submit\"\r\n                                    value=\"signIn\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={createUserInFirebase}>\r\n                                    Sign&nbsp;Up\r\n                                </Button>\r\n                            </div>\r\n\r\n                            <Button\r\n                                className={classes.button}\r\n                                type=\"submit\"\r\n                                value=\"signIn\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={authWithFaceBook}>\r\n                                <FacebookIcon></FacebookIcon>\r\n                                &nbsp; Enter&nbsp;Facebook\r\n                            </Button>\r\n                            <GoogleButton\r\n                                className={classes.button}\r\n                                onClick={() => {\r\n                                    AuthWithGoogle()\r\n                                    console.log(\"Google button clicked\")\r\n                                }}\r\n                            />\r\n                        </form>\r\n                    </Dialog>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default AuthUser\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\User.js",["88","89","90"],"import React, { useState, useEffect } from \"react\"\r\n\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport PersonOutlineTwoToneIcon from \"@material-ui/icons/PersonOutlineTwoTone\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    navLink: {\r\n        display: \"flex\",\r\n        flexGrow: 1,\r\n        justifyContent: \" space - between\",\r\n        textAlign: \"center\",\r\n        textDecoration: \" none\",\r\n    },\r\n    button: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            margin: 8,\r\n            fontSize: \".7rem\",\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            margin: 8,\r\n\r\n            fontSize: \".9rem\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            margin: 8,\r\n            fontSize: \"1rem\",\r\n        },\r\n    },\r\n    divMedia: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            margin: 8,\r\n            fontSize: \".7rem\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            margin: 8,\r\n            width: \"20%\",\r\n            fontSize: \".9rem\",\r\n            textAlign: \"right\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            margin: 8,\r\n            fontSize: \"1rem\",\r\n        },\r\n    },\r\n\r\n    icon: {\r\n        fontSize: \"2rem\",\r\n    },\r\n    item: {\r\n        flex: \"0 auto\",\r\n    },\r\n    ListItemText: {\r\n        marginLeft: \"auto\",\r\n        \"& span\": {\r\n            [theme.breakpoints.up(\"xs\")]: {\r\n                margin: 8,\r\n                fontSize: \".5rem\",\r\n            },\r\n            [theme.breakpoints.up(\"sm\")]: {\r\n                margin: 8,\r\n                fontSize: \".7rem\",\r\n            },\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                margin: 8,\r\n                fontSize: \".8rem\",\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nfunction User({ users, deleteUser }) {\r\n \r\n    const classes = useStyles()\r\n\r\n    return users.map((user, i) => {\r\n        return (\r\n            <div key={i}>\r\n                <ListItem button className={classes.root}>\r\n                    <NavLink className={classes.navLink} to={\"/users/\" + parseInt(user.id_user)}>\r\n                        <ListItemText className={classes.item} primary={i + 1} />\r\n                        &#8195;\r\n                        <PersonOutlineTwoToneIcon className={classes.icon} />\r\n                        &#8195;\r\n                        <ListItemText primary={user.user_name} />\r\n                        <ListItemText className={classes.ListItemText} primary={user.time} />\r\n                    </NavLink>\r\n                    <div className={classes.divMedia}>\r\n                        <Button\r\n                            onClick={() => {\r\n                                deleteUser(i, user.id_user)\r\n                            }}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            startIcon={<DeleteIcon />}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                </ListItem>\r\n                <Divider />\r\n            </div>\r\n        )\r\n    })\r\n}\r\n\r\nexport default User\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\UsersTask\\list.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\components\\ModaForlEdit.js",["91"],"import React, { useState } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport TransitEnterexitIcon from \"@material-ui/icons/TransitEnterexit\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: \"fixed\",\r\n        width: \"300px\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        backgroundColor: \"white\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"column\",\r\n        borderRadius: \"5px\",\r\n        border: \"1px solid #a58e8eb5\",\r\n        boxShadow: \"0px 1px 3px 0px\",\r\n        padding: \"10px\",\r\n    },\r\n    headerButton: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n    },\r\n    hideModal: {\r\n        display: \"none\",\r\n    },\r\n    textField: {\r\n        width: \"70%\",\r\n    },\r\n}))\r\nexport const ModalEdit = ({ user, show, closeModal }) => {\r\n    const classes = useStyles()\r\n\r\n   \r\n    return (\r\n        <div className={show ? classes.root : classes.hideModal}>\r\n            <div className={classes.headerButton}>\r\n                <Typography className={classes.typography}>\r\n                    {user.id + 1}new task:{user.value}\r\n                </Typography>\r\n\r\n                <IconButton aria-label=\"close\" onClick={closeModal}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </div>\r\n            <Typography className={classes.typography}>old task:{user.title}</Typography>\r\n            <form>\r\n                <div className={classes.headerButton}>\r\n                    <TextField\r\n                        label={\"user task\"}\r\n                        className={classes.textField}\r\n                        placeholder=\"edit task\"\r\n                        helperText=\"\"\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        type=\"text\"\r\n                        value={user.value}\r\n                        onChange={(e) => {\r\n                            user.changeTitlebyModal(e.target.value)\r\n                        }}>\r\n                        {\" \"}\r\n                    </TextField>\r\n                    <IconButton\r\n                        onClick={() => {\r\n                            user.editTask(user.id_user, user.id_task)\r\n                            closeModal()\r\n                        }}\r\n                        aria-label=\"enter\">\r\n                        <TransitEnterexitIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n",["92","93"],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":38,"nodeType":"100","messageId":"101","endLine":1,"endColumn":48},{"ruleId":"98","severity":1,"message":"102","line":3,"column":27,"nodeType":"100","messageId":"101","endLine":3,"endColumn":34},{"ruleId":"103","severity":1,"message":"104","line":78,"column":8,"nodeType":"105","endLine":78,"endColumn":10,"suggestions":"106"},{"ruleId":"98","severity":1,"message":"107","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":15},{"ruleId":"98","severity":1,"message":"108","line":2,"column":17,"nodeType":"100","messageId":"101","endLine":2,"endColumn":23},{"ruleId":"98","severity":1,"message":"109","line":2,"column":34,"nodeType":"100","messageId":"101","endLine":2,"endColumn":42},{"ruleId":"98","severity":1,"message":"110","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"111","line":1,"column":27,"nodeType":"100","messageId":"101","endLine":1,"endColumn":36},{"ruleId":"112","severity":1,"message":"113","line":134,"column":21,"nodeType":"114","endLine":134,"endColumn":32},{"ruleId":"98","severity":1,"message":"111","line":1,"column":27,"nodeType":"100","messageId":"101","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"115","line":176,"column":21,"nodeType":"100","messageId":"101","endLine":176,"endColumn":30},{"ruleId":"98","severity":1,"message":"116","line":177,"column":21,"nodeType":"100","messageId":"101","endLine":177,"endColumn":33},{"ruleId":"98","severity":1,"message":"117","line":179,"column":21,"nodeType":"100","messageId":"101","endLine":179,"endColumn":26},{"ruleId":"98","severity":1,"message":"118","line":181,"column":21,"nodeType":"100","messageId":"101","endLine":181,"endColumn":31},{"ruleId":"98","severity":1,"message":"119","line":203,"column":21,"nodeType":"100","messageId":"101","endLine":203,"endColumn":32},{"ruleId":"98","severity":1,"message":"115","line":209,"column":21,"nodeType":"100","messageId":"101","endLine":209,"endColumn":30},{"ruleId":"98","severity":1,"message":"116","line":210,"column":21,"nodeType":"100","messageId":"101","endLine":210,"endColumn":33},{"ruleId":"98","severity":1,"message":"117","line":212,"column":21,"nodeType":"100","messageId":"101","endLine":212,"endColumn":26},{"ruleId":"98","severity":1,"message":"118","line":214,"column":21,"nodeType":"100","messageId":"101","endLine":214,"endColumn":31},{"ruleId":"98","severity":1,"message":"110","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"111","line":1,"column":27,"nodeType":"100","messageId":"101","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"120","line":10,"column":8,"nodeType":"100","messageId":"101","endLine":10,"endColumn":13},{"ruleId":"98","severity":1,"message":"110","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"94","replacedBy":"121"},{"ruleId":"96","replacedBy":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Context' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stateUsers'. Either include it or remove the dependency array.","ArrayExpression",["125"],"'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'accessToken' is assigned a value but never used.","'Alert' is defined but never used.",["123"],["124"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Update the dependencies array to be: [stateUsers]",{"range":"128","text":"129"},[2741,2743],"[stateUsers]"]
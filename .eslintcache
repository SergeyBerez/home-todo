[{"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\index.js":"1","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\App.js":"2","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\reportWebVitals.js":"3","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\serviceWorker.js":"4","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Home.js":"5","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\About.js":"6","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\Users.js":"7","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\UserPersonalTasks.js":"8","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Links\\Drower.js":"9","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\User.js":"10","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\list.js":"11","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\components\\modalEdit.js":"12"},{"size":1032,"mtime":1610670765761,"results":"13","hashOfConfig":"14"},{"size":8979,"mtime":1610670765518,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":5227,"mtime":1610670766171,"results":"17","hashOfConfig":"14"},{"size":286,"mtime":1610670765807,"results":"18","hashOfConfig":"14"},{"size":620,"mtime":1610670765769,"results":"19","hashOfConfig":"14"},{"size":2577,"mtime":1610670765948,"results":"20","hashOfConfig":"14"},{"size":3586,"mtime":1610670765929,"results":"21","hashOfConfig":"14"},{"size":4866,"mtime":1610670765675,"results":"22","hashOfConfig":"14"},{"size":2040,"mtime":1610670765877,"results":"23","hashOfConfig":"14"},{"size":3527,"mtime":1610670766107,"results":"24","hashOfConfig":"14"},{"size":1449,"mtime":1610670765711,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"52doba",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\index.js",[],["57","58"],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\App.js",["59","60","61"],"import React, { useState, useEffect } from \"react\"\r\nimport firebase from \"firebase\"\r\n\r\nimport { Route, Switch, NavLink, Redirect } from \"react-router-dom\"\r\nimport Container from \"@material-ui/core/Container\"\r\n\r\nimport \"./App.css\"\r\nimport MiniDrawer from \"./Links/Drower\"\r\n\r\nimport Home from \"./pages/Home\"\r\nimport Users from \"./pages/Users/Users\"\r\nimport UserPersonalTasks from \"./pages/Users/UserPersonalTasks\"\r\nimport About from \"./pages/About\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            maxWidth: \"400px\",\r\n            paddingLeft: \"0px\",\r\n            paddingRight: \"0px\",\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            maxWidth: \" 600px\",\r\n            paddingLeft: \"54px\",\r\n           \r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            maxWidth: \" 960px\",\r\n            paddingLeft: \"60px\",\r\n        },\r\n    },\r\n}))\r\n\r\nfunction App() {\r\n    const classes = useStyles()\r\n\r\n    const USERS_LOCAL_STORAGE = JSON.parse(localStorage.getItem(\"users\")) || []\r\n\r\n    const [stateUsers, setUsers] = useState(USERS_LOCAL_STORAGE)\r\n    const [valueUser, setValueUser] = useState({ value: \"\" })\r\n    const [valueTodo, setValueTodor] = useState({ value: \"\" })\r\n\r\n    useEffect(() => {\r\n        console.log(\"use effect\")\r\n        getUsersFromFairbase()\r\n    }, [])\r\n\r\n    const getUsersFromFairbase = async (params) => {\r\n        let response = await fetch(\"https://react-quize-46f17.firebaseio.com/users.json\")\r\n        let users = [...stateUsers]\r\n        console.log(users)\r\n        // let newUsers = [];\r\n        if (response.ok) {\r\n            let json = await response.json()\r\n            console.log(\"getUsersFromFairbase\", json)\r\n            if (json !== null) {\r\n                Object.values(json).forEach((objFirestore) => {\r\n                    users.push(objFirestore)\r\n                })\r\n            }\r\n        }\r\n        let uniqeArray = users.filter((item, index, self) => {\r\n            return (\r\n                index ===\r\n                self.findIndex((obj) => {\r\n                    return item.id_user === obj.id_user\r\n                })\r\n            )\r\n        })\r\n        console.log(uniqeArray)\r\n\r\n        localStorage.setItem(\"users\", JSON.stringify(uniqeArray))\r\n        setUsers(uniqeArray)\r\n    }\r\n    const postUsertoFirebase = (userParam) => {\r\n        const db = firebase.database()\r\n        db.ref(\"users/\" + userParam.id_user).set(userParam)\r\n    }\r\n\r\n    const addUser = () => {\r\n        console.log(\"adduser\")\r\n        let newUser = {\r\n            id_user: Date.now() + 1,\r\n            time: new Date().toString().split(\"G\")[0],\r\n            user_name: valueUser.value,\r\n            completed: false,\r\n            tasks: [],\r\n            countTask: 0,\r\n        }\r\n        if (valueUser.value.length > 2) {\r\n            let users = [...stateUsers]\r\n            users.push(newUser)\r\n            localStorage.setItem(\"users\", JSON.stringify(users))\r\n            setUsers(users)\r\n            setValueUser({ value: \"\" })\r\n            postUsertoFirebase(newUser)\r\n        } else {\r\n        }\r\n    }\r\n    const changeTitleUserTask = (value) => {\r\n        console.log(\"vlaue\", value)\r\n        //let arr = {...stateUsers;}\r\n        //  setUsers({ todos: arr,});\r\n        setValueUser({ value })\r\n    }\r\n    const preventDefault = (e) => {\r\n        console.log(e.target)\r\n        e.preventDefault()\r\n    }\r\n    const changeTitlebyModal = (value) => {\r\n        setValueTodor({ value })\r\n    }\r\n    const keyHandle = (e) => {\r\n        console.log(\"keyHandle\")\r\n        if (e.keyCode === 13 && valueUser.value.length > 2) {\r\n            addUser()\r\n            // if (id_user) {\r\n            //   addTodoTaskUser(id_user, count_task)\r\n            // }\r\n        }\r\n    }\r\n    const keyHandleInputTask = (e, id_user, count_task) => {\r\n        console.log(\"keyHandleInputTask\", id_user, count_task)\r\n        if (e.keyCode === 13 && valueUser.value.length > 2) {\r\n            addTodoTaskUser(id_user, count_task)\r\n        }\r\n    }\r\n\r\n    const addTodoTaskUser = (id_user, count_task) => {\r\n        console.log(\"ddTodoTaskUser\")\r\n        if (valueUser.value.length > 2) {\r\n            let users = [...stateUsers]\r\n            let user = users.find((user, i) => {\r\n                return user.id_user === id_user\r\n            })\r\n\r\n            user.countTask = count_task + 1\r\n            const userTasks = [...user.tasks]\r\n            const date = new Date()\r\n            userTasks.push({\r\n                id_task: new Date().getTime() + 1,\r\n                title: valueUser.value,\r\n                time_task: `${new Date().toLocaleDateString()} :${date.getHours()}:${date.getMinutes()}`,\r\n            })\r\n            user.tasks = userTasks\r\n\r\n            setUsers(users)\r\n            localStorage.setItem(\"users\", JSON.stringify(users))\r\n            setValueUser({ value: \"\" })\r\n            postUsertoFirebase(user)\r\n\r\n            console.log(\"user===================\", user)\r\n            console.log(\"user===================\", users)\r\n        }\r\n    }\r\n    const editTask = (id_user, id_task) => {\r\n        console.log(id_user, id_task)\r\n        let users = [...stateUsers]\r\n        let user = { ...users[id_user] }\r\n        let userTasks = [...users[id_user].tasks]\r\n        console.log(userTasks)\r\n\r\n        let tasks = userTasks.map((item) => {\r\n            if (item.id_task === id_task) {\r\n                item.title = valueTodo.value\r\n            }\r\n            return item\r\n        })\r\n        userTasks = tasks\r\n        user.tasks = userTasks\r\n        users[id_user] = user\r\n\r\n        setUsers({ ...users })\r\n        localStorage.setItem(\"users\", JSON.stringify({ ...users }))\r\n        setValueTodor({ value: \"\" })\r\n    }\r\n    // const changeChecked = (e, i) => {\r\n    //   let todos = [...stateUsers.todos];\r\n    //   todos[i].completed = e.target.checked;\r\n\r\n    //   setUsers({ todos, value: stateUsers.value });\r\n    // };\r\n\r\n    // const onShowUserTask = (id) => {\r\n    //   let todos = [...stateUsers.todos].map((user) => {\r\n    //     if (user.id === id) {\r\n    //       user.completed = !user.completed;\r\n    //     }\r\n    //     return user;\r\n    //   });\r\n\r\n    //   console.log(stateUsers);\r\n    //   setUsers({ todos, value: stateUsers.value });\r\n    // };\r\n    const deleteUser = (idUser) => {\r\n        let users = [...stateUsers]\r\n        users.splice(idUser, 1)\r\n        setUsers(users)\r\n        postUsertoFirebase(users)\r\n        localStorage.setItem(\"users\", JSON.stringify(users))\r\n    }\r\n    const deleteTask = (idUser, idTask, id) => {\r\n        console.log(id)\r\n        let users = [...stateUsers]\r\n        let user = users.find((user) => {\r\n            return user.id_user === idUser\r\n        })\r\n        user.tasks.splice(id, 1)\r\n\r\n        users.push(user)\r\n        let arrUsers = users.filter((user, pos) => {\r\n            return users.indexOf(user) === pos\r\n        })\r\n\r\n        postUsertoFirebase(arrUsers)\r\n        setUsers(arrUsers)\r\n        localStorage.setItem(\"users\", JSON.stringify(arrUsers))\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.root}>\r\n            <MiniDrawer />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route\r\n                    exact\r\n                    path=\"/users\"\r\n                    render={() => (\r\n                        <Users\r\n                            addUser={addUser}\r\n                            keyHandle={keyHandle}\r\n                            changeTitle={changeTitleUserTask}\r\n                            users={stateUsers}\r\n                            value={valueUser.value}\r\n                            deleteUser={deleteUser}\r\n                        />\r\n                    )}></Route>\r\n                <Route\r\n                    path=\"/users/:id\"\r\n                    render={(e) => (\r\n                        <UserPersonalTasks\r\n                            valueUser={valueUser.value}\r\n                            valueTodo={valueTodo.value}\r\n                            history={e}\r\n                            users={stateUsers}\r\n                            keyHandle={keyHandleInputTask}\r\n                            addTodoTaskUser={addTodoTaskUser}\r\n                            editTask={editTask}\r\n                            changeTitleUserTask={changeTitleUserTask}\r\n                            changeTitlebyModal={changeTitlebyModal}\r\n                            deleteTask={deleteTask}\r\n                        />\r\n                    )}\r\n                />\r\n                <Route path=\"/about\" component={About}></Route>\r\n                <Redirect to=\"/\"></Redirect>\r\n                <Route\r\n                    render={() => {\r\n                        return <h1 style={{ color: \"red\" }}> 404 not found page...</h1>\r\n                    }}\r\n                />\r\n            </Switch>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\reportWebVitals.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\serviceWorker.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Home.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\About.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\Users.js",["62","63"],"import React, { useState, useEffect } from \"react\"\r\n// import { NavLink } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport List from \"@material-ui/core/List\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport User from \"./User\"\r\n\r\nimport PeopleAltTwoToneIcon from \"@material-ui/icons/PeopleAltTwoTone\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    header: {\r\n        marginTop: 70,\r\n    },\r\n    textField: {\r\n        width: \"70%\",\r\n        margin: 8,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        fontSize: \"1rem\",\r\n    },\r\n}))\r\n\r\nfunction Users(props) {\r\n    const classes = useStyles()\r\n    // props.value.length > 2? <h3>\r\n    console.log(\"================render ===== users\", props)\r\n    return (\r\n        <div className={classes.header}>\r\n            <Alert icon={false} severity=\"info\" className={classes.root}>\r\n                <PeopleAltTwoToneIcon /> &nbsp;\r\n                {Object.keys(props.users).length !== 0 ? (\r\n                    <>\r\n                        &nbsp; <p>all users</p> &nbsp; &nbsp;\r\n                        <span>{Object.keys(props.users).length}</span>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <span>not users add user</span>\r\n                    </>\r\n                )}\r\n            </Alert>\r\n\r\n            <div className={classes.root}>\r\n                <TextField\r\n                    value={props.value}\r\n                    onChange={(e) => {\r\n                        props.changeTitle(e.target.value)\r\n                    }}\r\n                    onKeyUp={props.keyHandle}\r\n                    id=\"standard-full-width\"\r\n                    label=\"Enter user\"\r\n                    className={classes.textField}\r\n                    placeholder=\"name user\"\r\n                    helperText=\"\"\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    type=\"text\"\r\n                />\r\n                <Button onClick={props.addUser} variant=\"contained\" className={classes.button}>\r\n                    ADD USER\r\n                </Button>\r\n            </div>\r\n            <List>\r\n                <User users={props.users} deleteUser={props.deleteUser}></User>\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\nexport default Users\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\UserPersonalTasks.js",["64"],"import React from \"react\"\r\nimport ListUser from \"./list\"\r\nimport List from \"@material-ui/core/List\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    header: {\r\n        marginTop: 70,\r\n    },\r\n    textField: {\r\n        width: \"70%\",\r\n        margin: 8,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        fontSize: \"1rem\",\r\n    },\r\n}))\r\n\r\nconst UserPersonalTasks = (props) => {\r\n    const tasks = []\r\n    const classes = useStyles()\r\n\r\n    console.log(\"==============UserPersonalTasks render user tasks\", props)\r\n    let RenderUserTask\r\n    let user\r\n    if (props.users.length) {\r\n        user = props.users.find((user) => {\r\n            return user.id_user === parseInt(props.history.match.params.id)\r\n        })\r\n\r\n        if (user.tasks === undefined) {\r\n            user.tasks = tasks\r\n        }\r\n\r\n        RenderUserTask = user.tasks.map((task, i) => {\r\n            return (\r\n                <ListUser\r\n                    key={i}\r\n                    id={i}\r\n                    id_user={parseInt(props.history.match.params.id)}\r\n                    id_task={task.id_task}\r\n                    value={props.valueTodo}\r\n                    title={task.title}\r\n                    time={task.time_task}\r\n                    editTask={props.editTask}\r\n                    changeTitlebyModal={props.changeTitlebyModal}\r\n                    deleteTask={props.deleteTask}\r\n\r\n                    // showModal={item.showModal}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.header}>\r\n            <Alert icon={false} severity=\"info\" className={classes.root}>\r\n                {\" \"}\r\n                {RenderUserTask === undefined ? (\r\n                    <h1>at firs add user</h1>\r\n                ) : (\r\n                    <>\r\n                        <h2>{user.user_name}</h2>\r\n                        &nbsp;\r\n                        <h3>tasks &nbsp;{user.tasks.length}</h3>\r\n                    </>\r\n                )}\r\n            </Alert>\r\n            <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Enter task\"\r\n                className={classes.textField}\r\n                placeholder=\"name task\"\r\n                helperText=\"\"\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                type=\"text\"\r\n                value={props.valueUser}\r\n                onKeyUp={(e) => {\r\n                    props.keyHandle(e, parseInt(props.history.match.params.id), user.tasks.length)\r\n                }}\r\n                onChange={(e) => {\r\n                    props.changeTitleUserTask(e.target.value)\r\n                }}\r\n                type=\"text\"></TextField>\r\n            <Button\r\n                onClick={() => {\r\n                    props.addTodoTaskUser(parseInt(props.history.match.params.id), user.tasks.length)\r\n                }}\r\n                disabled={props.users.length === 0}\r\n                variant=\"contained\"\r\n                className={classes.button}>\r\n                ADD TASK\r\n            </Button>\r\n\r\n            <List>{RenderUserTask} </List>\r\n            {/* {user.tasks.length === 0 ? <p>добавьте user</p> : null} */}\r\n        </div>\r\n    )\r\n}\r\nexport default UserPersonalTasks\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Links\\Drower.js",["65","66","67"],"import React from \"react\";\r\nimport { Route, Switch, NavLink, Redirect } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\nconst links = [\r\n  {\r\n    title: \"home\",\r\n    link: \"/\",\r\n  },\r\n  {\r\n    title: \"users\",\r\n    link: \"/users\",\r\n  },\r\n  {\r\n    title: \"about\",\r\n    link: \"/about\",\r\n  },\r\n];\r\n\r\nconst MiniDrawer = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Menu\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <List>\r\n          {links.map((text, index) => (\r\n            <ListItem button key={index}>\r\n              <ListItemIcon>\r\n                <NavLink exact to={text.link} className={classes.link}>\r\n                  <LinkIcon />\r\n                </NavLink>\r\n              </ListItemIcon>\r\n              <ListItemText primary={text.title} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiniDrawer;\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\User.js",["68","69","70"],"import React, { useState, useEffect } from \"react\"\r\n\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport PersonOutlineTwoToneIcon from \"@material-ui/icons/PersonOutlineTwoTone\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: 8,\r\n    },\r\n    li: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        textAlign: \"center\",\r\n    },\r\n    icon: {\r\n        fontSize: \"2rem\",\r\n  },\r\n  item: {\r\n      flex:\"0 auto\"\r\n    }\r\n}))\r\n\r\nfunction User({ users, deleteUser }) {\r\n    const classes = useStyles()\r\n\r\n    return users.map((user, i) => {\r\n        return (\r\n            <div key={i}>\r\n                <ListItem button key={i}>\r\n                    <NavLink className=\"nav-link\" to={\"/users/\" + parseInt(user.id_user)}>\r\n                        <ListItemText className={classes.item} primary={i + 1} />\r\n                        <PersonOutlineTwoToneIcon className={classes.icon} />\r\n                        <ListItemText primary={user.user_name} />\r\n                        <ListItemText primary={user.time} />\r\n                        <ListItemText primary={user.countTask} />\r\n                    </NavLink>\r\n\r\n                    <Button\r\n                        onClick={() => {\r\n                            deleteUser(i)\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={classes.button}\r\n                        startIcon={<DeleteIcon />}>\r\n                        Delete\r\n                    </Button>\r\n                </ListItem>\r\n                <Divider />\r\n            </div>\r\n        )\r\n    })\r\n}\r\n\r\nexport default User\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\list.js",["71","72"],"import Modal from \"../../components/modalEdit\"\r\nimport React, { useState } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport EditIcon from \"@material-ui/icons/Edit\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    header: {\r\n        marginTop: 70,\r\n    },\r\n    textField: {\r\n        width: \"85%\",\r\n        margin: 8,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nexport default function List(props) {\r\n    const classes = useStyles()\r\n    const [state, setState] = useState(false)\r\n    const toggleModal = () => {\r\n        setState(!state)\r\n    }\r\n\r\n    // console.log(\"======render list\", props);\r\n    return (\r\n        <>\r\n            <ListItem className={classes.root}>\r\n                <Typography>{props.id + 1}</Typography>\r\n\r\n                <Typography>{props.title}</Typography>\r\n\r\n                <Typography>{props.time}</Typography>\r\n                <div>\r\n                    <Button\r\n                        onClick={toggleModal}\r\n                        variant=\"contained\"\r\n                        className={classes.button}\r\n                        startIcon={<EditIcon />}>\r\n                        edit\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            props.deleteTask(props.id_user, props.id_task, props.id)\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        startIcon={<DeleteIcon />}\r\n                        className={classes.button}>\r\n                        {\" \"}\r\n                        DELL\r\n                    </Button>\r\n                </div>\r\n                {/* {state ? (\r\n                    <Modal\r\n                        id_user={props.id_user}\r\n                        id_task={props.id_task}\r\n                        title={props.title}\r\n                        value={props.value}\r\n                        editTask={props.editTask}\r\n                        changeTitlebyModal={props.changeTitlebyModal}\r\n                        toggleModal={toggleModal}\r\n                    />\r\n                ) : null} */}\r\n            </ListItem>\r\n            <Divider />\r\n        </>\r\n    )\r\n}\r\n\r\n// export default function list({ nameTask, id }) {\r\n//   const [modal, showModal] = useState(true);\r\n//   function toggleModal() {\r\n//     showModal(!modal);\r\n//   }\r\n//   return (\r\n//     <li className=\"list-group-item  userTasksLi\">\r\n//       <div className=\"\">\r\n//         <i className=\"fas fa-thumbtack\"></i>\r\n//         <span>\r\n//           {nameTask} {id}\r\n//         </span>\r\n//       </div>\r\n//       <div>\r\n//         <Modal nameTask={nameTask} />\r\n\r\n//         <button\r\n//           toggleModal={toggleModal}\r\n//           type=\"button\"\r\n//           className=\"btn btn-outline-warning\"\r\n//         >\r\n//           <i className=\"fas fa-edit\"></i>\r\n//         </button>\r\n\r\n//         <button type=\"button\" className=\"btn btn-outline-danger\">\r\n//           <i className=\"fas fa-trash-alt\"></i>\r\n//         </button>\r\n//       </div>\r\n//     </li>\r\n//   );\r\n// }\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\components\\modalEdit.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":4,"column":25,"nodeType":"79","messageId":"80","endLine":4,"endColumn":32},{"ruleId":"81","severity":1,"message":"82","line":47,"column":8,"nodeType":"83","endLine":47,"endColumn":10,"suggestions":"84"},{"ruleId":"77","severity":1,"message":"85","line":107,"column":11,"nodeType":"79","messageId":"80","endLine":107,"endColumn":25},{"ruleId":"77","severity":1,"message":"86","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"87","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"89","line":95,"column":17,"nodeType":"90","endLine":95,"endColumn":28},{"ruleId":"77","severity":1,"message":"91","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":15},{"ruleId":"77","severity":1,"message":"92","line":2,"column":17,"nodeType":"79","messageId":"80","endLine":2,"endColumn":23},{"ruleId":"77","severity":1,"message":"93","line":2,"column":34,"nodeType":"79","messageId":"80","endLine":2,"endColumn":42},{"ruleId":"77","severity":1,"message":"86","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"87","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"94","line":10,"column":8,"nodeType":"79","messageId":"80","endLine":10,"endColumn":13},{"ruleId":"77","severity":1,"message":"95","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":13},{"ruleId":"77","severity":1,"message":"96","line":6,"column":8,"nodeType":"79","messageId":"80","endLine":6,"endColumn":20},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsersFromFairbase'. Either include it or remove the dependency array.","ArrayExpression",["99"],"'preventDefault' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Alert' is defined but never used.","'Modal' is defined but never used.","'ListItemText' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [getUsersFromFairbase]",{"range":"102","text":"103"},[1410,1412],"[getUsersFromFairbase]"]
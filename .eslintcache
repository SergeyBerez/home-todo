[{"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\index.js":"1","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\serviceWorker.js":"2","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\App.js":"3","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Firebase\\firebaseConfig.js":"4","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Context\\Context.js":"5","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\LinksDrowerHeader\\Drower.js":"6","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\About.js":"7","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\Users.js":"8","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Home.js":"9","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\UsersTask\\UserPersonalTasks.js":"10","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Auth\\Auth.js":"11","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\User.js":"12","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\UsersTask\\list.js":"13","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\components\\ModaForlEdit.js":"14","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Context\\ContextValue.js":"15","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Admin\\Admin.js":"16"},{"size":807,"mtime":1613580801018,"results":"17","hashOfConfig":"18"},{"size":5227,"mtime":1610670766171,"results":"19","hashOfConfig":"18"},{"size":13038,"mtime":1614442479930,"results":"20","hashOfConfig":"18"},{"size":817,"mtime":1612711144513,"results":"21","hashOfConfig":"18"},{"size":1829,"mtime":1613738603430,"results":"22","hashOfConfig":"18"},{"size":5895,"mtime":1613740403513,"results":"23","hashOfConfig":"18"},{"size":597,"mtime":1613151705912,"results":"24","hashOfConfig":"18"},{"size":3849,"mtime":1613632765645,"results":"25","hashOfConfig":"18"},{"size":2423,"mtime":1612620527077,"results":"26","hashOfConfig":"18"},{"size":5305,"mtime":1614441201412,"results":"27","hashOfConfig":"18"},{"size":13099,"mtime":1613739880760,"results":"28","hashOfConfig":"18"},{"size":3675,"mtime":1613742449433,"results":"29","hashOfConfig":"18"},{"size":4043,"mtime":1613726740104,"results":"30","hashOfConfig":"18"},{"size":3084,"mtime":1613729033804,"results":"31","hashOfConfig":"18"},{"size":2990,"mtime":1614441814834,"results":"32","hashOfConfig":"18"},{"size":168,"mtime":1613734014971,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"52doba",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\index.js",[],["72","73"],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\serviceWorker.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\App.js",["74"],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Firebase\\firebaseConfig.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Context\\Context.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\LinksDrowerHeader\\Drower.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\About.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\Users.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Home.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\UsersTask\\UserPersonalTasks.js",["75","76"],"import React, { useHistory } from \"react\"\r\nimport { nanoid } from \"nanoid\"\r\nimport { useValue } from \"../../Context/ContextValue\"\r\nimport ListUserTaskMycomponent from \"./list\"\r\nimport List from \"@material-ui/core/List\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navLink: {\r\n        // display: \"flex\",\r\n        // flexGrow: 1,\r\n        // justifyContent: \"space-between\",\r\n        // textAlign: \"center\",\r\n        // textDecoration: \" none\",\r\n    },\r\n    Alert: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: 70,\r\n        \"& div\": {\r\n            display: \"flex\",\r\n            width: \"50%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n\r\n    textField: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            width: \"100%\",\r\n            margin: 8,\r\n        },\r\n\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \"85%\",\r\n            margin: 8,\r\n        },\r\n    },\r\n    button: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            fontSize: \".7rem\",\r\n        },\r\n\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            fontSize: \"1rem\",\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    error: {\r\n        \"&& label\": { color: \"red\" },\r\n    },\r\n}))\r\n\r\nconst UserPersonalTasks = (props) => {\r\n    const { valueInputTask, handleUserInputTask, errorMessage } = useValue()\r\n\r\n    const classes = useStyles()\r\n    const cls = [classes.textField]\r\n    const message = errorMessage || \"Enter user\"\r\n    // const history = useHistory()\r\n    // console.log(history)\r\n    if (!valueInputTask.validate && valueInputTask.touched) {\r\n        cls.push(classes.error)\r\n    } else {\r\n        cls.push(\"\")\r\n    }\r\n    const tasks = []\r\n    console.log(\"==============UserPersonalTasks render user tasks\")\r\n    let RenderUserTask\r\n    let user\r\n    if (props.users.length) {\r\n        user = props.users.find((user) => {\r\n            return user.id_user === props.history.match.params.id\r\n        })\r\n\r\n        if (user.tasks === undefined) {\r\n            user.tasks = tasks\r\n        }\r\n\r\n        RenderUserTask = user.tasks.map((task, i) => {\r\n            return (\r\n                <ListUserTaskMycomponent\r\n                    key={nanoid()}\r\n                    id={i}\r\n                    id_user={props.history.match.params.id}\r\n                    id_task={task.id_task}\r\n                    value={props.valueTodo}\r\n                    title={task.title}\r\n                    time={task.time_task}\r\n                    editTask={props.editTask}\r\n                    deleteTask={props.deleteTask}\r\n\r\n                    // showModal={item.showModal}\r\n                />\r\n            )\r\n        })\r\n    }\r\n    console.log(RenderUserTask)\r\n    // ==============UserPersonalTasks render user tasks\r\n    return (\r\n        <div className={classes.header}>\r\n            <Alert icon={false} severity=\"info\" className={classes.Alert}>\r\n                <NavLink className={classes.navLink} to={\"/users/\"}>\r\n                    <IconButton>\r\n                        <KeyboardBackspaceIcon></KeyboardBackspaceIcon>\r\n                    </IconButton>\r\n                </NavLink>\r\n                {RenderUserTask === undefined ? (\r\n                    <p1>at firs add user</p1>\r\n                ) : (\r\n                    <>\r\n                        <p>{user.user_name}</p>\r\n                        &nbsp;\r\n                        <p>tasks &nbsp;{user.tasks.length}</p>\r\n                    </>\r\n                )}\r\n            </Alert>\r\n            <div className={classes.root}>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={message}\r\n                    className={classes.textField}\r\n                    placeholder=\"name task\"\r\n                    helperText=\"\"\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    type=\"text\"\r\n                    value={valueInputTask.value}\r\n                    onKeyUp={(e) => {\r\n                        props.keyHandle(e, props.history.match.params.id, user.tasks.length)\r\n                    }}\r\n                    onChange={handleUserInputTask}\r\n                    type=\"text\"></TextField>\r\n                <Button\r\n                    onClick={() => {\r\n                        props.addTodoTaskUser(props.history.match.params.id, user.tasks.length)\r\n                    }}\r\n                    disabled={props.users.length === 0}\r\n                    variant=\"contained\"\r\n                    className={classes.button}>\r\n                    ADD&nbsp;TASK\r\n                </Button>\r\n            </div>\r\n            <List>{RenderUserTask} </List>\r\n        </div>\r\n    )\r\n}\r\nexport default UserPersonalTasks\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Auth\\Auth.js",["77","78","79","80","81","82","83","84"],"import React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport firebase, { authFirebase } from \"../Firebase/firebaseConfig\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { useAuth } from \"../Context/Context\"\r\n\r\nimport GoogleButton from \"react-google-button\"\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\nconst useStyles = makeStyles((theme) => ({\r\n    // [theme.breakpoints.up(\"xs\")]: {},\r\n    // [theme.breakpoints.up(\"sm\")]: {},\r\n    // [theme.breakpoints.up(\"md\")]: {},\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n        input: {\r\n            width: \"100%\",\r\n            \"& input\": {\r\n                padding: \"13px 10px\",\r\n            },\r\n        },\r\n\r\n        dialog: {\r\n            textAlign: \"center\",\r\n\r\n            \"& form\": {\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                textAlign: \"center\",\r\n            },\r\n        },\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n        input: {\r\n            width: \"100%\",\r\n            \"& input\": {\r\n                padding: \"13px 15px\",\r\n            },\r\n        },\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n        input: {\r\n            width: \"100%\",\r\n            \"& input\": {\r\n                padding: \"15px 15px\",\r\n            },\r\n        },\r\n    },\r\n    typography: {\r\n        marginBottom: 5,\r\n        fontSize: \"0.8rem\",\r\n        textOverflow: \"ellipsis\",\r\n    },\r\n    icon: {\r\n        marginLeft: \"auto\",\r\n    },\r\n\r\n    blockButton: {\r\n        textAlign: \"center\",\r\n        width: \"100%\",\r\n    },\r\n    button: {\r\n        margin: \"5px\",\r\n    },\r\n    userAvatar: {\r\n        borderRadius: \"50%\",\r\n        maxWidth: 30,\r\n    },\r\n}))\r\n\r\nconst AuthUser = () => {\r\n    console.log(\"====================authUser\")\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n\r\n    const { currentUser, authisLogged, authIsExit, signUp, authInfo } = useAuth()\r\n    const [messageFirebase, SetmessageFormFirebase] = useState(\"\")\r\n    const [valueInputs, SetvalutInputs] = useState({ email: \"\", password: \"\" })\r\n    const [open, setOpen] = useState(false)\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false)\r\n    }\r\n    const onHandleInputs = (e) => {\r\n        SetvalutInputs({\r\n            ...valueInputs,\r\n            [e.target.type]: e.target.value,\r\n        })\r\n    }\r\n    const backToMainPage = (e) => {\r\n        history.push(\"/users/\")\r\n    }\r\n    const createUserInFirebase = (e) => {\r\n        e.preventDefault()\r\n        const { email, password } = valueInputs\r\n        console.log(valueInputs)\r\n        authFirebase\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then((data) => {\r\n                authisLogged()\r\n                console.log(\"login user\", data.user)\r\n                SetvalutInputs({\r\n                    email: \"\",\r\n                    password: \"\",\r\n                })\r\n                localStorage.setItem(\r\n                    \"LOGIN_USER\",\r\n                    JSON.stringify({\r\n                        id: data.user.uid,\r\n                        localId: data.user.l,\r\n                        email: data.user.email,\r\n                    })\r\n                )\r\n                SetmessageFormFirebase(data.user.email)\r\n                backToMainPage()\r\n            })\r\n            .catch((error) => {\r\n                var messageFirebase = error.message\r\n                console.log(messageFirebase)\r\n                SetmessageFormFirebase(messageFirebase)\r\n            })\r\n    }\r\n    const onLogInAuthHandle = (e) => {\r\n        e.preventDefault()\r\n        const { email, password } = valueInputs\r\n\r\n        authFirebase\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then((data) => {\r\n                SetvalutInputs({\r\n                    email: \"\",\r\n                    password: \"\",\r\n                })\r\n\r\n                SetmessageFormFirebase(data.user.email)\r\n                localStorage.setItem(\r\n                    \"LOGIN_USER\",\r\n                    JSON.stringify({\r\n                        id: data.user.uid,\r\n                        localId: data.user.l,\r\n                        email: data.user.email,\r\n                    })\r\n                )\r\n                authisLogged()\r\n                currentUser && backToMainPage()\r\n            })\r\n            .catch((error) => {\r\n                var messageFirebase = error.message\r\n                SetmessageFormFirebase(messageFirebase)\r\n            })\r\n    }\r\n\r\n    const AuthWithGoogle = () => {\r\n        var provider = new firebase.auth.GoogleAuthProvider()\r\n        authFirebase\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                /** @type {firebase.auth.OAuthCredential} */\r\n                var credential = result.credential\r\n\r\n                // This gives you a Google Access Token. You can use it to access the Google API.\r\n                var token = credential.accessToken\r\n                // The signed-in user info.\r\n                var user = result.user\r\n\r\n                backToMainPage()\r\n                // authisLogged()\r\n                SetvalutInputs({\r\n                    email: \"\",\r\n                    password: \"\",\r\n                })\r\n\r\n                SetmessageFormFirebase(user.email, user.displayName)\r\n                // localStorage.setItem(\r\n                //     \"LOGIN_USER\",\r\n                //     JSON.stringify({\r\n                //         name: user.displayName,\r\n                //         id: user.uid,\r\n                //         localId: user.l,\r\n                //         email: user.email,\r\n                //         token,\r\n                //     })\r\n                // )\r\n                // ...\r\n            })\r\n            .catch((error) => {\r\n                // Handle Errors here.\r\n                var errorCode = error.code\r\n                var errorMessage = error.message\r\n                // The email of the user's account used.\r\n                var email = error.email\r\n                // The firebase.auth.AuthCredential type that was used.\r\n                var credential = error.credential\r\n                // ...\r\n            })\r\n\r\n        console.log(\"auth with gogle\")\r\n    }\r\n    //========================authWithFaceBook\r\n    // const authWithFaceBook = (e) => {\r\n    //     e.preventDefault()\r\n    //     console.log(\"auth with facebook\")\r\n    //     var provider = new firebase.auth.FacebookAuthProvider()\r\n    //     firebase\r\n    //         .auth()\r\n    //         .signInWithPopup(provider)\r\n    //         .then((result) => {\r\n    //             /** @type {firebase.auth.OAuthCredential} */\r\n    //             var credential = result.credential\r\n    //             // The signed-in user info.\r\n    //             var user = result.user\r\n    //             console.log(user)\r\n    //             // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n    //             var accessToken = credential.accessToken\r\n    //             SetvalutInputs({\r\n    //                 email: \"\",\r\n    //                 password: \"\",\r\n    //             })\r\n    //             SetmessageFormFirebase(user.email, user.displayName)\r\n    //             localStorage.setItem(\r\n    //                 \"LOGIN_USER\",\r\n    //                 JSON.stringify({\r\n    //                     name: user.displayName,\r\n    //                     id: user.uid,\r\n    //                     localId: user.l,\r\n    //                     email: user.email,\r\n    //                 })\r\n    //             )\r\n    //             authisLogged()\r\n    //             backToMainPage()\r\n    //             // ...\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             // Handle Errors here.\r\n    //             var errorCode = error.code\r\n    //             var errorMessage = error.message\r\n    //             // The email of the user's account used.\r\n    //             var email = error.email\r\n    //             // The firebase.auth.AuthCredential type that was used.\r\n    //             var credential = error.credential\r\n\r\n    //             // ...\r\n    //         })\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            {currentUser ? (\r\n                <div>\r\n                    <Typography className={classes.typography}>{authInfo.displayName}</Typography>\r\n\r\n                    <img className={classes.userAvatar} src={authInfo.photoURL} alt=\"photo user\"></img>\r\n                    <Button value=\"exit\" color=\"inherit\" onClick={authIsExit}>\r\n                        exit\r\n                    </Button>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    {\" \"}\r\n                    <div>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n                            Enter/Register\r\n                        </Button>\r\n                    </div>\r\n                    <Dialog\r\n                        className={classes.dialog}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"simple-dialog-title\"\r\n                        open={open}>\r\n                        {\" \"}\r\n                        <CloseIcon className={classes.icon} onClick={handleClose}></CloseIcon>\r\n                        <DialogTitle id=\"simple-dialog-title\"> Register</DialogTitle>\r\n                        <form className={classes.form}>\r\n                            <Typography className={classes.typography}>{messageFirebase}</Typography>\r\n                            <TextField\r\n                                className={classes.input}\r\n                                id=\"outlined-Email-input\"\r\n                                label=\"email\"\r\n                                value={valueInputs.email}\r\n                                type=\"Email\"\r\n                                autoComplete=\"current-password\"\r\n                                variant=\"outlined\"\r\n                                onChange={onHandleInputs}\r\n                                color=\"secondary\"\r\n                            />\r\n                            <TextField\r\n                                className={classes.input}\r\n                                id=\"outlined-password-input\"\r\n                                label=\"password\"\r\n                                value={valueInputs.password}\r\n                                type=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                variant=\"outlined\"\r\n                                onChange={onHandleInputs}\r\n                                color=\"secondary\"\r\n                            />\r\n                            <div className={classes.blockButton}>\r\n                                {\" \"}\r\n                                <Button\r\n                                    className={classes.button}\r\n                                    type=\"submit\"\r\n                                    value=\"login\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={onLogInAuthHandle}>\r\n                                    Login\r\n                                </Button>\r\n                                <Button\r\n                                    className={classes.button}\r\n                                    type=\"submit\"\r\n                                    value=\"signIn\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={createUserInFirebase}>\r\n                                    Sign&nbsp;Up\r\n                                </Button>\r\n                            </div>\r\n\r\n                            {/* <Button\r\n                                className={classes.button}\r\n                                type=\"submit\"\r\n                                value=\"signIn\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={authWithFaceBook}>\r\n                                <FacebookIcon></FacebookIcon>\r\n                                &nbsp; Enter&nbsp;Facebook\r\n                            </Button> */}\r\n                            <GoogleButton\r\n                                className={classes.button}\r\n                                onClick={() => {\r\n                                    AuthWithGoogle()\r\n                                }}\r\n                            />\r\n                        </form>\r\n                    </Dialog>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default AuthUser\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\User.js",["85"],"import React, { useHistory } from \"react\"\r\nimport { nanoid } from \"nanoid\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport PersonOutlineTwoToneIcon from \"@material-ui/icons/PersonOutlineTwoTone\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    navLink: {\r\n        display: \"flex\",\r\n        flexGrow: 1,\r\n        justifyContent: \" space - between\",\r\n        textAlign: \"center\",\r\n        textDecoration: \" none\",\r\n    },\r\n    button: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            margin: 8,\r\n            fontSize: \".7rem\",\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            margin: 8,\r\n\r\n            fontSize: \".9rem\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            margin: 8,\r\n            fontSize: \"1rem\",\r\n        },\r\n    },\r\n    divMedia: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            margin: 8,\r\n            fontSize: \".7rem\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            margin: 8,\r\n            width: \"20%\",\r\n            fontSize: \".9rem\",\r\n            textAlign: \"right\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            margin: 8,\r\n            fontSize: \"1rem\",\r\n        },\r\n    },\r\n\r\n    icon: {\r\n        fontSize: \"2rem\",\r\n    },\r\n    item: {\r\n        flex: \"0 auto\",\r\n    },\r\n    ListItemText: {\r\n        marginLeft: \"auto\",\r\n        \"& span\": {\r\n            [theme.breakpoints.up(\"xs\")]: {\r\n                margin: 8,\r\n                fontSize: \".5rem\",\r\n            },\r\n            [theme.breakpoints.up(\"sm\")]: {\r\n                margin: 8,\r\n                fontSize: \".7rem\",\r\n            },\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                margin: 8,\r\n                fontSize: \".8rem\",\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nfunction User({ users, deleteUser }) {\r\n    const classes = useStyles()\r\n\r\n    console.log(\"user===\", users)\r\n    return users.map((user, i) => {\r\n        return (\r\n            <div key={nanoid()}>\r\n                <ListItem button className={classes.root}>\r\n                    <NavLink className={classes.navLink} to={\"/users/\" + user.id_user}>\r\n                        <ListItemText className={classes.item} primary={i + 1} />\r\n                        &#8195;\r\n                        <PersonOutlineTwoToneIcon className={classes.icon} />\r\n                        &#8195;\r\n                        <ListItemText primary={user.user_name} />\r\n                        <ListItemText className={classes.ListItemText} primary={user.time} />\r\n                    </NavLink>\r\n                    <div className={classes.divMedia}>\r\n                        <Button\r\n                            onClick={() => {\r\n                                deleteUser(i, user.id_user)\r\n                            }}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            startIcon={<DeleteIcon />}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                </ListItem>\r\n                <Divider />\r\n            </div>\r\n        )\r\n    })\r\n}\r\n\r\nexport default User\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\UsersTask\\list.js",["86"],"// import Modal from \"../../components/modalEdit\"\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { useValue } from \"../../Context/ContextValue\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport EditIcon from \"@material-ui/icons/Edit\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { ModalEdit } from \"../../components/ModaForlEdit\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    header: {\r\n        marginTop: 70,\r\n    },\r\n    typography: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            margin: 8,\r\n            fontSize: \".7rem\",\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            margin: 8,\r\n            fontSize: \".9rem\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            margin: 8,\r\n            fontSize: \"1rem\",\r\n        },\r\n    },\r\n    boxButton: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            margin: 8,\r\n            fontSize: \".5rem\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            margin: 8,\r\n            fontSize: \".7rem\",\r\n            width: \"100%\",\r\n            textAlign: \"right\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            margin: 8,\r\n            fontSize: \"1rem\",\r\n            width: \"25%\",\r\n            display: \"flex\",\r\n            // justifyContent: \"space-between\",\r\n        },\r\n    },\r\n    button: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            fontSize: \".5rem\",\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            fontSize: \".7rem\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            fontSize: \"1rem\",\r\n        },\r\n    },\r\n    form: {\r\n        position: \"fixed\",\r\n        width: \"200px\",\r\n        height: \"200px\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n}))\r\n\r\nexport default function List(props) {\r\n    console.log(\"list\")\r\n    const { valueTodo } = useValue()\r\n    const classes = useStyles()\r\n    const [openModal, setOpenModal] = useState(valueTodo.showModal)\r\n\r\n    const showModal = () => {\r\n        setOpenModal(true)\r\n        // if (props.value > 3) {\r\n        //     setOpenModal(true)\r\n        // }\r\n        // console.log(\"coloseModal\")\r\n    }\r\n    const closeModal = () => {\r\n        console.log(\"===============showModal\")\r\n        setOpenModal(false)\r\n    }\r\n    return (\r\n        <>\r\n            <ListItem className={classes.root}>\r\n                <Typography className={classes.typography}>\r\n                    {props.id + 1}&#8195;\r\n                    {props.title}\r\n                </Typography>\r\n\r\n                <Typography className={classes.typography}>{props.time}</Typography>\r\n                <div className={classes.boxButton}>\r\n                    <Button onClick={showModal} variant=\"contained\" className={classes.button} startIcon={<EditIcon />}>\r\n                        edit\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            props.deleteTask(props.id_user, props.id_task, props.id)\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        startIcon={<DeleteIcon />}\r\n                        className={classes.button}>\r\n                        {\" \"}\r\n                        DELL\r\n                    </Button>\r\n                </div>\r\n            </ListItem>\r\n            <ModalEdit props={props} show={openModal} closeModal={closeModal}></ModalEdit>\r\n            <Divider />\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\components\\ModaForlEdit.js",["87","88"],"import React, { useRef } from \"react\"\r\nimport { useValue } from \"../Context/ContextValue\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport TransitEnterexitIcon from \"@material-ui/icons/TransitEnterexit\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: \"fixed\",\r\n        width: \"300px\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        backgroundColor: \"white\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"column\",\r\n        borderRadius: \"5px\",\r\n        border: \"1px solid #a58e8eb5\",\r\n        boxShadow: \"0px 1px 3px 0px\",\r\n        padding: \"10px\",\r\n    },\r\n    headerButton: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n    },\r\n    hideModal: {\r\n        display: \"none\",\r\n    },\r\n    textField: {\r\n        width: \"70%\",\r\n    },\r\n}))\r\nexport const ModalEdit = ({ props, show, closeModal }) => {\r\n    const { valueTodo, handleUserInput, changeTitlebyModal, errorMessage } = useValue()\r\n    console.log(\"modal\", props)\r\n    const classes = useStyles()\r\n    const textInput = useRef()\r\n    return (\r\n        <div className={show ? classes.root : classes.hideModal}>\r\n            <div className={classes.headerButton}>\r\n                <Typography className={classes.typography}>\r\n                    {props.id + 1}new task:{props.value}\r\n                </Typography>\r\n\r\n                <IconButton aria-label=\"close\" onClick={closeModal}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </div>\r\n            <Typography className={classes.typography}>old task:{props.title}</Typography>\r\n            <form>\r\n                <div className={classes.headerButton}>\r\n                    <TextField\r\n                        ref={textInput}\r\n                        label={\"props task\"}\r\n                        className={classes.textField}\r\n                        placeholder=\"edit task\"\r\n                        helperText=\"\"\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        type=\"text\"\r\n                        value={valueTodo.value}\r\n                        onChange={(e) => {\r\n                            changeTitlebyModal(e, textInput)\r\n                        }}>\r\n                        {\" \"}\r\n                    </TextField>\r\n                    <IconButton\r\n                        onClick={() => {\r\n                            props.editTask(props.id_user, props.id_task)\r\n                        }}\r\n                        aria-label=\"enter\">\r\n                        <TransitEnterexitIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Context\\ContextValue.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Admin\\Admin.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":132,"column":8,"nodeType":"95","endLine":132,"endColumn":18,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":27},{"ruleId":"101","severity":1,"message":"102","line":146,"column":21,"nodeType":"103","endLine":146,"endColumn":32},{"ruleId":"97","severity":1,"message":"104","line":11,"column":8,"nodeType":"99","messageId":"100","endLine":11,"endColumn":20},{"ruleId":"97","severity":1,"message":"105","line":81,"column":52,"nodeType":"99","messageId":"100","endLine":81,"endColumn":58},{"ruleId":"97","severity":1,"message":"106","line":170,"column":21,"nodeType":"99","messageId":"100","endLine":170,"endColumn":26},{"ruleId":"97","severity":1,"message":"107","line":196,"column":21,"nodeType":"99","messageId":"100","endLine":196,"endColumn":30},{"ruleId":"97","severity":1,"message":"108","line":197,"column":21,"nodeType":"99","messageId":"100","endLine":197,"endColumn":33},{"ruleId":"97","severity":1,"message":"109","line":199,"column":21,"nodeType":"99","messageId":"100","endLine":199,"endColumn":26},{"ruleId":"97","severity":1,"message":"110","line":201,"column":21,"nodeType":"99","messageId":"100","endLine":201,"endColumn":31},{"ruleId":"111","severity":1,"message":"112","line":260,"column":21,"nodeType":"113","endLine":260,"endColumn":98},{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":27},{"ruleId":"97","severity":1,"message":"114","line":2,"column":27,"nodeType":"99","messageId":"100","endLine":2,"endColumn":36},{"ruleId":"97","severity":1,"message":"115","line":39,"column":24,"nodeType":"99","messageId":"100","endLine":39,"endColumn":39},{"ruleId":"97","severity":1,"message":"108","line":39,"column":61,"nodeType":"99","messageId":"100","endLine":39,"endColumn":73},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stateUsers'. Either include it or remove the dependency array.","ArrayExpression",["118"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'FacebookIcon' is defined but never used.","'signUp' is assigned a value but never used.","'token' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","'handleUserInput' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [authInfo, stateUsers]",{"range":"121","text":"122"},[4734,4744],"[authInfo, stateUsers]"]
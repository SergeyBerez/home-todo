[{"C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\index.js":"1","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\App.js":"2","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\serviceWorker.js":"3","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\Context\\Context.js":"4","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\Context\\ContextValue.js":"5","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\Admin\\Admin.js":"6","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\Firebase\\firebaseConfig.js":"7","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\LinksDrowerHeader\\Drower.js":"8","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\pages\\Home.js":"9","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\pages\\About.js":"10","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\pages\\Users\\Users.js":"11","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\pages\\UsersTask\\UserPersonalTasks.js":"12","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\pages\\Users\\User.js":"13","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\pages\\UsersTask\\list.js":"14","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\Auth\\Auth.js":"15","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\components\\ModaForlEdit.js":"16"},{"size":807,"mtime":1646986509224,"results":"17","hashOfConfig":"18"},{"size":10789,"mtime":1646993216205,"results":"19","hashOfConfig":"18"},{"size":5227,"mtime":1646986509234,"results":"20","hashOfConfig":"18"},{"size":1829,"mtime":1646986509215,"results":"21","hashOfConfig":"18"},{"size":2990,"mtime":1646986509217,"results":"22","hashOfConfig":"18"},{"size":168,"mtime":1646986509209,"results":"23","hashOfConfig":"18"},{"size":817,"mtime":1646986509218,"results":"24","hashOfConfig":"18"},{"size":5895,"mtime":1646986509220,"results":"25","hashOfConfig":"18"},{"size":2423,"mtime":1646986509226,"results":"26","hashOfConfig":"18"},{"size":597,"mtime":1646986509225,"results":"27","hashOfConfig":"18"},{"size":3272,"mtime":1646992055253,"results":"28","hashOfConfig":"18"},{"size":5305,"mtime":1646986509231,"results":"29","hashOfConfig":"18"},{"size":3166,"mtime":1646992724295,"results":"30","hashOfConfig":"18"},{"size":4043,"mtime":1646986509232,"results":"31","hashOfConfig":"18"},{"size":11129,"mtime":1646993616317,"results":"32","hashOfConfig":"18"},{"size":2626,"mtime":1646991414012,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m7k1el",{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},"C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\index.js",[],"C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\App.js",["71","72"],"C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\serviceWorker.js",[],"C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\Context\\Context.js",[],"C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\Context\\ContextValue.js",[],"C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\Admin\\Admin.js",[],["73","74"],"C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\Firebase\\firebaseConfig.js",[],"C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\LinksDrowerHeader\\Drower.js",[],"C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\pages\\Home.js",[],"C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\pages\\About.js",[],"C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\pages\\Users\\Users.js",[],"C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\pages\\UsersTask\\UserPersonalTasks.js",["75","76"],"import React, { useHistory } from \"react\"\r\nimport { nanoid } from \"nanoid\"\r\nimport { useValue } from \"../../Context/ContextValue\"\r\nimport ListUserTaskMycomponent from \"./list\"\r\nimport List from \"@material-ui/core/List\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navLink: {\r\n        // display: \"flex\",\r\n        // flexGrow: 1,\r\n        // justifyContent: \"space-between\",\r\n        // textAlign: \"center\",\r\n        // textDecoration: \" none\",\r\n    },\r\n    Alert: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: 70,\r\n        \"& div\": {\r\n            display: \"flex\",\r\n            width: \"50%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n\r\n    textField: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            width: \"100%\",\r\n            margin: 8,\r\n        },\r\n\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \"85%\",\r\n            margin: 8,\r\n        },\r\n    },\r\n    button: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            fontSize: \".7rem\",\r\n        },\r\n\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            fontSize: \"1rem\",\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    error: {\r\n        \"&& label\": { color: \"red\" },\r\n    },\r\n}))\r\n\r\nconst UserPersonalTasks = (props) => {\r\n    const { valueInputTask, handleUserInputTask, errorMessage } = useValue()\r\n\r\n    const classes = useStyles()\r\n    const cls = [classes.textField]\r\n    const message = errorMessage || \"Enter user\"\r\n    // const history = useHistory()\r\n    // console.log(history)\r\n    if (!valueInputTask.validate && valueInputTask.touched) {\r\n        cls.push(classes.error)\r\n    } else {\r\n        cls.push(\"\")\r\n    }\r\n    const tasks = []\r\n    console.log(\"==============UserPersonalTasks render user tasks\")\r\n    let RenderUserTask\r\n    let user\r\n    if (props.users.length) {\r\n        user = props.users.find((user) => {\r\n            return user.id_user === props.history.match.params.id\r\n        })\r\n\r\n        if (user.tasks === undefined) {\r\n            user.tasks = tasks\r\n        }\r\n\r\n        RenderUserTask = user.tasks.map((task, i) => {\r\n            return (\r\n                <ListUserTaskMycomponent\r\n                    key={nanoid()}\r\n                    id={i}\r\n                    id_user={props.history.match.params.id}\r\n                    id_task={task.id_task}\r\n                    value={props.valueTodo}\r\n                    title={task.title}\r\n                    time={task.time_task}\r\n                    editTask={props.editTask}\r\n                    deleteTask={props.deleteTask}\r\n\r\n                    // showModal={item.showModal}\r\n                />\r\n            )\r\n        })\r\n    }\r\n    console.log(RenderUserTask)\r\n    // ==============UserPersonalTasks render user tasks\r\n    return (\r\n        <div className={classes.header}>\r\n            <Alert icon={false} severity=\"info\" className={classes.Alert}>\r\n                <NavLink className={classes.navLink} to={\"/users/\"}>\r\n                    <IconButton>\r\n                        <KeyboardBackspaceIcon></KeyboardBackspaceIcon>\r\n                    </IconButton>\r\n                </NavLink>\r\n                {RenderUserTask === undefined ? (\r\n                    <p1>at firs add user</p1>\r\n                ) : (\r\n                    <>\r\n                        <p>{user.user_name}</p>\r\n                        &nbsp;\r\n                        <p>tasks &nbsp;{user.tasks.length}</p>\r\n                    </>\r\n                )}\r\n            </Alert>\r\n            <div className={classes.root}>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={message}\r\n                    className={classes.textField}\r\n                    placeholder=\"name task\"\r\n                    helperText=\"\"\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    type=\"text\"\r\n                    value={valueInputTask.value}\r\n                    onKeyUp={(e) => {\r\n                        props.keyHandle(e, props.history.match.params.id, user.tasks.length)\r\n                    }}\r\n                    onChange={handleUserInputTask}\r\n                    type=\"text\"></TextField>\r\n                <Button\r\n                    onClick={() => {\r\n                        props.addTodoTaskUser(props.history.match.params.id, user.tasks.length)\r\n                    }}\r\n                    disabled={props.users.length === 0}\r\n                    variant=\"contained\"\r\n                    className={classes.button}>\r\n                    ADD&nbsp;TASK\r\n                </Button>\r\n            </div>\r\n            <List>{RenderUserTask} </List>\r\n        </div>\r\n    )\r\n}\r\nexport default UserPersonalTasks\r\n","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\pages\\Users\\User.js",["77"],"import React, { useHistory } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport PersonOutlineTwoToneIcon from \"@material-ui/icons/PersonOutlineTwoTone\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  navLink: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    justifyContent: \" space - between\",\r\n    textAlign: \"center\",\r\n    textDecoration: \" none\",\r\n  },\r\n  button: {\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      margin: 8,\r\n      fontSize: \".7rem\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      margin: 8,\r\n\r\n      fontSize: \".9rem\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      margin: 8,\r\n      fontSize: \"1rem\",\r\n    },\r\n  },\r\n  divMedia: {\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      margin: 8,\r\n      fontSize: \".7rem\",\r\n      width: \"100%\",\r\n      textAlign: \"center\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      margin: 8,\r\n      width: \"20%\",\r\n      fontSize: \".9rem\",\r\n      textAlign: \"right\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      margin: 8,\r\n      fontSize: \"1rem\",\r\n    },\r\n  },\r\n\r\n  icon: {\r\n    fontSize: \"2rem\",\r\n  },\r\n  item: {\r\n    flex: \"0 auto\",\r\n  },\r\n  ListItemText: {\r\n    marginLeft: \"auto\",\r\n    \"& span\": {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        margin: 8,\r\n        fontSize: \".5rem\",\r\n      },\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        margin: 8,\r\n        fontSize: \".7rem\",\r\n      },\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        margin: 8,\r\n        fontSize: \".8rem\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction User({ users, deleteUser }) {\r\n  const classes = useStyles();\r\n\r\n  return users.map((user, i) => {\r\n    return (\r\n      <div key={nanoid()}>\r\n        <ListItem button className={classes.root}>\r\n          <NavLink className={classes.navLink} to={\"/users/\" + user.id_user}>\r\n            <ListItemText className={classes.item} primary={i + 1} />\r\n            &#8195;\r\n            <PersonOutlineTwoToneIcon className={classes.icon} />\r\n            &#8195;\r\n            <ListItemText primary={user?.user_name} />\r\n            <ListItemText primary={user?.tasks?.length} />\r\n            <ListItemText\r\n              className={classes.ListItemText}\r\n              primary={user.time}\r\n            />\r\n          </NavLink>\r\n          <div className={classes.divMedia}>\r\n            <Button\r\n              onClick={() => {\r\n                deleteUser(i, user.id_user);\r\n              }}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.button}\r\n              startIcon={<DeleteIcon />}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </div>\r\n        </ListItem>\r\n        <Divider />\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nexport default User;\r\n","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\pages\\UsersTask\\list.js",["78"],"// import Modal from \"../../components/modalEdit\"\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { useValue } from \"../../Context/ContextValue\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport EditIcon from \"@material-ui/icons/Edit\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { ModalEdit } from \"../../components/ModaForlEdit\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    header: {\r\n        marginTop: 70,\r\n    },\r\n    typography: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            margin: 8,\r\n            fontSize: \".7rem\",\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            margin: 8,\r\n            fontSize: \".9rem\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            margin: 8,\r\n            fontSize: \"1rem\",\r\n        },\r\n    },\r\n    boxButton: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            margin: 8,\r\n            fontSize: \".5rem\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            margin: 8,\r\n            fontSize: \".7rem\",\r\n            width: \"100%\",\r\n            textAlign: \"right\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            margin: 8,\r\n            fontSize: \"1rem\",\r\n            width: \"25%\",\r\n            display: \"flex\",\r\n            // justifyContent: \"space-between\",\r\n        },\r\n    },\r\n    button: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            fontSize: \".5rem\",\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            fontSize: \".7rem\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            fontSize: \"1rem\",\r\n        },\r\n    },\r\n    form: {\r\n        position: \"fixed\",\r\n        width: \"200px\",\r\n        height: \"200px\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n}))\r\n\r\nexport default function List(props) {\r\n    console.log(\"list\")\r\n    const { valueTodo } = useValue()\r\n    const classes = useStyles()\r\n    const [openModal, setOpenModal] = useState(valueTodo.showModal)\r\n\r\n    const showModal = () => {\r\n        setOpenModal(true)\r\n        // if (props.value > 3) {\r\n        //     setOpenModal(true)\r\n        // }\r\n        // console.log(\"coloseModal\")\r\n    }\r\n    const closeModal = () => {\r\n        console.log(\"===============showModal\")\r\n        setOpenModal(false)\r\n    }\r\n    return (\r\n        <>\r\n            <ListItem className={classes.root}>\r\n                <Typography className={classes.typography}>\r\n                    {props.id + 1}&#8195;\r\n                    {props.title}\r\n                </Typography>\r\n\r\n                <Typography className={classes.typography}>{props.time}</Typography>\r\n                <div className={classes.boxButton}>\r\n                    <Button onClick={showModal} variant=\"contained\" className={classes.button} startIcon={<EditIcon />}>\r\n                        edit\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            props.deleteTask(props.id_user, props.id_task, props.id)\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        startIcon={<DeleteIcon />}\r\n                        className={classes.button}>\r\n                        {\" \"}\r\n                        DELL\r\n                    </Button>\r\n                </div>\r\n            </ListItem>\r\n            <ModalEdit props={props} show={openModal} closeModal={closeModal}></ModalEdit>\r\n            <Divider />\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\Auth\\Auth.js",["79","80","81","82","83","84","85","86"],"C:\\Users\\Администратор\\Desktop\\all working project\\todo-react\\src\\components\\ModaForlEdit.js",["87","88"],"import React, { useRef } from \"react\";\r\nimport { useValue } from \"../Context/ContextValue\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TransitEnterexitIcon from \"@material-ui/icons/TransitEnterexit\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    width: \"300px\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    backgroundColor: \"white\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"column\",\r\n    borderRadius: \"5px\",\r\n    border: \"1px solid #a58e8eb5\",\r\n    boxShadow: \"0px 1px 3px 0px\",\r\n    padding: \"10px\",\r\n  },\r\n  headerButton: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  hideModal: {\r\n    display: \"none\",\r\n  },\r\n  textField: {\r\n    width: \"70%\",\r\n  },\r\n}));\r\nexport const ModalEdit = ({ props, show, closeModal }) => {\r\n  const { valueTodo, handleUserInput, changeTitlebyModal, errorMessage } =\r\n    useValue();\r\n\r\n  const classes = useStyles();\r\n  const textInput = useRef();\r\n  return (\r\n    <div className={show ? classes.root : classes.hideModal}>\r\n      <div className={classes.headerButton}>\r\n        <Typography className={classes.typography}>\r\n          {props.id + 1}new task:{props.value}\r\n        </Typography>\r\n\r\n        <IconButton aria-label=\"close\" onClick={closeModal}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Typography className={classes.typography}>\r\n        old task:{props.title}\r\n      </Typography>\r\n      <form>\r\n        <div className={classes.headerButton}>\r\n          <TextField\r\n            ref={textInput}\r\n            label={\"props task\"}\r\n            className={classes.textField}\r\n            placeholder=\"edit task\"\r\n            helperText=\"\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            type=\"text\"\r\n            value={valueTodo.value}\r\n            onChange={(e) => {\r\n              changeTitlebyModal(e, textInput);\r\n            }}\r\n          >\r\n            {\" \"}\r\n          </TextField>\r\n          <IconButton\r\n            onClick={() => {\r\n              props.editTask(props.id_user, props.id_task);\r\n            }}\r\n            aria-label=\"enter\"\r\n          >\r\n            <TransitEnterexitIcon />\r\n          </IconButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"89","severity":1,"message":"90","line":125,"column":6,"nodeType":"91","endLine":125,"endColumn":16,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":193,"column":11,"nodeType":"95","messageId":"96","endLine":193,"endColumn":16},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"93","severity":1,"message":"101","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":146,"column":21,"nodeType":"104","endLine":146,"endColumn":32},{"ruleId":"93","severity":1,"message":"101","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":27},{"ruleId":"93","severity":1,"message":"105","line":2,"column":27,"nodeType":"95","messageId":"96","endLine":2,"endColumn":36},{"ruleId":"93","severity":1,"message":"106","line":11,"column":8,"nodeType":"95","messageId":"96","endLine":11,"endColumn":20},{"ruleId":"93","severity":1,"message":"107","line":80,"column":50,"nodeType":"95","messageId":"96","endLine":80,"endColumn":56},{"ruleId":"93","severity":1,"message":"108","line":169,"column":13,"nodeType":"95","messageId":"96","endLine":169,"endColumn":18},{"ruleId":"93","severity":1,"message":"109","line":195,"column":13,"nodeType":"95","messageId":"96","endLine":195,"endColumn":22},{"ruleId":"93","severity":1,"message":"110","line":196,"column":13,"nodeType":"95","messageId":"96","endLine":196,"endColumn":25},{"ruleId":"93","severity":1,"message":"111","line":198,"column":13,"nodeType":"95","messageId":"96","endLine":198,"endColumn":18},{"ruleId":"93","severity":1,"message":"112","line":200,"column":13,"nodeType":"95","messageId":"96","endLine":200,"endColumn":23},{"ruleId":"113","severity":1,"message":"114","line":261,"column":11,"nodeType":"115","endLine":265,"endColumn":12},{"ruleId":"93","severity":1,"message":"116","line":39,"column":22,"nodeType":"95","messageId":"96","endLine":39,"endColumn":37},{"ruleId":"93","severity":1,"message":"110","line":39,"column":59,"nodeType":"95","messageId":"96","endLine":39,"endColumn":71},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stateUsers'. Either include it or remove the dependency array.","ArrayExpression",["117"],"no-unused-vars","'users' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["118"],"no-negated-in-lhs",["119"],"'useHistory' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","'FacebookIcon' is defined but never used.","'signUp' is assigned a value but never used.","'token' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'handleUserInput' is assigned a value but never used.",{"desc":"120","fix":"121"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [authInfo, stateUsers]",{"range":"122","text":"123"},[3937,3947],"[authInfo, stateUsers]"]
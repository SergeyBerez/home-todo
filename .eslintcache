[{"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\index.js":"1","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\serviceWorker.js":"2","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\App.js":"3","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\About.js":"4","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\Users.js":"5","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Home.js":"6","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Firebase\\firebaseConfig.js":"7","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\User.js":"8","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\components\\ModaForlEdit.js":"9","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Auth\\Auth.js":"10","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Context\\Context.js":"11","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\LinksDrowerHeader\\Drower.js":"12","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\UsersTask\\UserPersonalTasks.js":"13","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\UsersTask\\list.js":"14"},{"size":584,"mtime":1611147873838,"results":"15","hashOfConfig":"16"},{"size":5227,"mtime":1610670766171,"results":"17","hashOfConfig":"16"},{"size":10231,"mtime":1611509452961,"results":"18","hashOfConfig":"16"},{"size":597,"mtime":1611508903026,"results":"19","hashOfConfig":"16"},{"size":3403,"mtime":1611512392805,"results":"20","hashOfConfig":"16"},{"size":2393,"mtime":1611352027677,"results":"21","hashOfConfig":"16"},{"size":737,"mtime":1611307285550,"results":"22","hashOfConfig":"16"},{"size":3666,"mtime":1611349752659,"results":"23","hashOfConfig":"16"},{"size":2882,"mtime":1611327755346,"results":"24","hashOfConfig":"16"},{"size":7410,"mtime":1611504579981,"results":"25","hashOfConfig":"16"},{"size":76,"mtime":1611501073498,"results":"26","hashOfConfig":"16"},{"size":5503,"mtime":1611500379098,"results":"27","hashOfConfig":"16"},{"size":4927,"mtime":1611502523081,"results":"28","hashOfConfig":"16"},{"size":3801,"mtime":1611502301346,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"52doba",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\index.js",[],["63","64"],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\serviceWorker.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\App.js",["65"],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\About.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\Users.js",["66","67"],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Home.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Firebase\\firebaseConfig.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\Users\\User.js",["68","69","70"],"import React, { useState, useEffect } from \"react\"\r\n\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport PersonOutlineTwoToneIcon from \"@material-ui/icons/PersonOutlineTwoTone\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    navLink: {\r\n        display: \"flex\",\r\n        flexGrow: 1,\r\n        justifyContent: \" space - between\",\r\n        textAlign: \"center\",\r\n        textDecoration: \" none\",\r\n    },\r\n    button: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            margin: 8,\r\n            fontSize: \".7rem\",\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            margin: 8,\r\n\r\n            fontSize: \".9rem\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            margin: 8,\r\n            fontSize: \"1rem\",\r\n        },\r\n    },\r\n    divMedia: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            margin: 8,\r\n            fontSize: \".7rem\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            margin: 8,\r\n            width: \"20%\",\r\n            fontSize: \".9rem\",\r\n            textAlign: \"right\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            margin: 8,\r\n            fontSize: \"1rem\",\r\n        },\r\n    },\r\n\r\n    icon: {\r\n        fontSize: \"2rem\",\r\n    },\r\n    item: {\r\n        flex: \"0 auto\",\r\n    },\r\n    ListItemText: {\r\n        marginLeft: \"auto\",\r\n        \"& span\": {\r\n            [theme.breakpoints.up(\"xs\")]: {\r\n                margin: 8,\r\n                fontSize: \".5rem\",\r\n            },\r\n            [theme.breakpoints.up(\"sm\")]: {\r\n                margin: 8,\r\n                fontSize: \".7rem\",\r\n            },\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                margin: 8,\r\n                fontSize: \".8rem\",\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nfunction User({ users, deleteUser }) {\r\n \r\n    const classes = useStyles()\r\n\r\n    return users.map((user, i) => {\r\n        return (\r\n            <div key={i}>\r\n                <ListItem button className={classes.root}>\r\n                    <NavLink className={classes.navLink} to={\"/users/\" + parseInt(user.id_user)}>\r\n                        <ListItemText className={classes.item} primary={i + 1} />\r\n                        &#8195;\r\n                        <PersonOutlineTwoToneIcon className={classes.icon} />\r\n                        &#8195;\r\n                        <ListItemText primary={user.user_name} />\r\n                        <ListItemText className={classes.ListItemText} primary={user.time} />\r\n                    </NavLink>\r\n                    <div className={classes.divMedia}>\r\n                        <Button\r\n                            onClick={() => {\r\n                                deleteUser(i, user.id_user)\r\n                            }}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            startIcon={<DeleteIcon />}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                </ListItem>\r\n                <Divider />\r\n            </div>\r\n        )\r\n    })\r\n}\r\n\r\nexport default User\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\components\\ModaForlEdit.js",["71"],"import React, { useState } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport TransitEnterexitIcon from \"@material-ui/icons/TransitEnterexit\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: \"fixed\",\r\n        width: \"300px\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        backgroundColor: \"white\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"column\",\r\n        borderRadius: \"5px\",\r\n        border: \"1px solid #a58e8eb5\",\r\n        boxShadow: \"0px 1px 3px 0px\",\r\n        padding: \"10px\",\r\n    },\r\n    headerButton: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n    },\r\n    hideModal: {\r\n        display: \"none\",\r\n    },\r\n    textField: {\r\n        width: \"70%\",\r\n    },\r\n}))\r\nexport const ModalEdit = ({ user, show, closeModal }) => {\r\n    const classes = useStyles()\r\n\r\n   \r\n    return (\r\n        <div className={show ? classes.root : classes.hideModal}>\r\n            <div className={classes.headerButton}>\r\n                <Typography className={classes.typography}>\r\n                    {user.id + 1}new task:{user.value}\r\n                </Typography>\r\n\r\n                <IconButton aria-label=\"close\" onClick={closeModal}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </div>\r\n            <Typography className={classes.typography}>old task:{user.title}</Typography>\r\n            <form>\r\n                <div className={classes.headerButton}>\r\n                    <TextField\r\n                        label={\"user task\"}\r\n                        className={classes.textField}\r\n                        placeholder=\"edit task\"\r\n                        helperText=\"\"\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        type=\"text\"\r\n                        value={user.value}\r\n                        onChange={(e) => {\r\n                            user.changeTitlebyModal(e.target.value)\r\n                        }}>\r\n                        {\" \"}\r\n                    </TextField>\r\n                    <IconButton\r\n                        onClick={() => {\r\n                            user.editTask(user.id_user, user.id_task)\r\n                            closeModal()\r\n                        }}\r\n                        aria-label=\"enter\">\r\n                        <TransitEnterexitIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Auth\\Auth.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\Context\\Context.js",[],"C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\LinksDrowerHeader\\Drower.js",["72","73","74"],"import React from \"react\"\r\nimport { Route, Switch, NavLink, Redirect } from \"react-router-dom\"\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\r\nimport clsx from \"clsx\"\r\nimport Drawer from \"@material-ui/core/Drawer\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport List from \"@material-ui/core/List\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\"\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport LinkIcon from \"@material-ui/icons/Link\"\r\n\r\nimport AuthMyComponent from \"../Auth/Auth\"\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    flexGrow: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: \"flex-end\",\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}))\r\nconst links = [\r\n    {\r\n        title: \"home\",\r\n        link: \"/todo-material-firebase\",\r\n    },\r\n    {\r\n        title: \"users\",\r\n        link: \"/users\",\r\n    },\r\n    {\r\n        title: \"about\",\r\n        link: \"/about\",\r\n    },\r\n]\r\n\r\nconst MiniDrawer = ({ auth }) => {\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        // disabled='true'\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className={classes.flexGrow} variant=\"h6\" noWrap>\r\n                        Menu\r\n                    </Typography>\r\n                    <AuthMyComponent auth={auth}></AuthMyComponent>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === \"rtl\" ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n\r\n                <List>\r\n                    {links.map((text, index) => (\r\n                        <ListItem button key={index}>\r\n                            <ListItemIcon>\r\n                                <NavLink onClick={handleDrawerClose} exact to={text.link} className={classes.link}>\r\n                                    <LinkIcon />\r\n                                </NavLink>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text.title} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MiniDrawer\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\UsersTask\\UserPersonalTasks.js",["75"],"import React from \"react\"\r\nimport ListUserTaskMycomponent from \"./list\"\r\nimport List from \"@material-ui/core/List\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navLink: {\r\n        // display: \"flex\",\r\n        // flexGrow: 1,\r\n        // justifyContent: \"space-between\",\r\n        // textAlign: \"center\",\r\n        // textDecoration: \" none\",\r\n    },\r\n    Alert: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: 70,\r\n        \"& div\": {\r\n            display: \"flex\",\r\n            width: \"50%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n\r\n    textField: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            width: \"100%\",\r\n            margin: 8,\r\n        },\r\n\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \"85%\",\r\n            margin: 8,\r\n        },\r\n    },\r\n    button: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            fontSize: \".7rem\",\r\n        },\r\n\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            fontSize: \"1rem\",\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}))\r\n\r\nconst UserPersonalTasks = (props) => {\r\n    \r\n    const tasks = []\r\n    const classes = useStyles()\r\n\r\n    console.log(\"==============UserPersonalTasks render user tasks\", props)\r\n    let RenderUserTask\r\n    let user\r\n    if (props.users.length) {\r\n        user = props.users.find((user) => {\r\n            return user.id_user === parseInt(props.history.match.params.id)\r\n        })\r\n\r\n        if (user.tasks === undefined) {\r\n            user.tasks = tasks\r\n        }\r\n\r\n        RenderUserTask = user.tasks.map((task, i) => {\r\n            return (\r\n                <ListUserTaskMycomponent\r\n                    key={i}\r\n                    id={i}\r\n                    id_user={parseInt(props.history.match.params.id)}\r\n                    id_task={task.id_task}\r\n                    value={props.valueTodo}\r\n                    title={task.title}\r\n                    time={task.time_task}\r\n                    editTask={props.editTask}\r\n                    changeTitlebyModal={props.changeTitlebyModal}\r\n                    deleteTask={props.deleteTask}\r\n\r\n                    // showModal={item.showModal}\r\n                />\r\n            )\r\n        })\r\n    }\r\n    // ==============UserPersonalTasks render user tasks\r\n    return (\r\n        <div className={classes.header}>\r\n            <Alert icon={false} severity=\"info\" className={classes.Alert}>\r\n                <NavLink className={classes.navLink} to={\"/users/\"}>\r\n                    <IconButton>\r\n                        <KeyboardBackspaceIcon></KeyboardBackspaceIcon>\r\n                    </IconButton>\r\n                </NavLink>\r\n                {RenderUserTask === undefined ? (\r\n                    <p1>at firs add user</p1>\r\n                ) : (\r\n                    <>\r\n                        <p>{user.user_name}</p>\r\n                        &nbsp;\r\n                        <p>tasks &nbsp;{user.tasks.length}</p>\r\n                    </>\r\n                )}\r\n            </Alert>\r\n            <div className={classes.root}>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Enter task\"\r\n                    className={classes.textField}\r\n                    placeholder=\"name task\"\r\n                    helperText=\"\"\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    type=\"text\"\r\n                    value={props.valueUser}\r\n                    onKeyUp={(e) => {\r\n                        props.keyHandle(e, parseInt(props.history.match.params.id), user.tasks.length)\r\n                    }}\r\n                    onChange={(e) => {\r\n                        props.changeTitleUserTask(e.target.value)\r\n                    }}\r\n                    type=\"text\"></TextField>\r\n                <Button\r\n                    onClick={() => {\r\n                        props.addTodoTaskUser(parseInt(props.history.match.params.id), user.tasks.length)\r\n                    }}\r\n                    disabled={props.users.length === 0}\r\n                    variant=\"contained\"\r\n                    className={classes.button}>\r\n                    ADD&nbsp;TASK\r\n                </Button>\r\n            </div>\r\n            <List>{RenderUserTask} </List>\r\n        </div>\r\n    )\r\n}\r\nexport default UserPersonalTasks\r\n","C:\\Users\\sergey\\Desktop\\REACT_Vladilen\\todo-firebase\\src\\pages\\UsersTask\\list.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":58,"column":8,"nodeType":"82","endLine":58,"endColumn":10,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"88","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":36},{"ruleId":"84","severity":1,"message":"85","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"88","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":36},{"ruleId":"84","severity":1,"message":"89","line":10,"column":8,"nodeType":"86","messageId":"87","endLine":10,"endColumn":13},{"ruleId":"84","severity":1,"message":"85","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"90","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":15},{"ruleId":"84","severity":1,"message":"91","line":2,"column":17,"nodeType":"86","messageId":"87","endLine":2,"endColumn":23},{"ruleId":"84","severity":1,"message":"92","line":2,"column":34,"nodeType":"86","messageId":"87","endLine":2,"endColumn":42},{"ruleId":"93","severity":1,"message":"94","line":134,"column":21,"nodeType":"95","endLine":134,"endColumn":32},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsersFromFairbase'. Either include it or remove the dependency array.","ArrayExpression",["98"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Alert' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Update the dependencies array to be: [getUsersFromFairbase]",{"range":"101","text":"102"},[1807,1809],"[getUsersFromFairbase]"]